//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\..\pggrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using System.Linq;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="pggrammar"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IpggrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoot([NotNull] pggrammar.RootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoot([NotNull] pggrammar.RootContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.plsqlroot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlsqlroot([NotNull] pggrammar.PlsqlrootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.plsqlroot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlsqlroot([NotNull] pggrammar.PlsqlrootContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmtblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtblock([NotNull] pggrammar.StmtblockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmtblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtblock([NotNull] pggrammar.StmtblockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmtmulti"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtmulti([NotNull] pggrammar.StmtmultiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmtmulti"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtmulti([NotNull] pggrammar.StmtmultiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] pggrammar.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] pggrammar.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.plsqlconsolecommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlsqlconsolecommand([NotNull] pggrammar.PlsqlconsolecommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.plsqlconsolecommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlsqlconsolecommand([NotNull] pggrammar.PlsqlconsolecommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.callstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallstmt([NotNull] pggrammar.CallstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.callstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallstmt([NotNull] pggrammar.CallstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createrolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreaterolestmt([NotNull] pggrammar.CreaterolestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createrolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreaterolestmt([NotNull] pggrammar.CreaterolestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_with"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_with([NotNull] pggrammar.Opt_withContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_with"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_with([NotNull] pggrammar.Opt_withContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optrolelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptrolelist([NotNull] pggrammar.OptrolelistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optrolelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptrolelist([NotNull] pggrammar.OptrolelistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alteroptrolelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlteroptrolelist([NotNull] pggrammar.AlteroptrolelistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alteroptrolelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlteroptrolelist([NotNull] pggrammar.AlteroptrolelistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alteroptroleelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlteroptroleelem([NotNull] pggrammar.AlteroptroleelemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alteroptroleelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlteroptroleelem([NotNull] pggrammar.AlteroptroleelemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createoptroleelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateoptroleelem([NotNull] pggrammar.CreateoptroleelemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createoptroleelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateoptroleelem([NotNull] pggrammar.CreateoptroleelemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createuserstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateuserstmt([NotNull] pggrammar.CreateuserstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createuserstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateuserstmt([NotNull] pggrammar.CreateuserstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterrolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterrolestmt([NotNull] pggrammar.AlterrolestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterrolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterrolestmt([NotNull] pggrammar.AlterrolestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_in_database"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_in_database([NotNull] pggrammar.Opt_in_databaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_in_database"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_in_database([NotNull] pggrammar.Opt_in_databaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterrolesetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterrolesetstmt([NotNull] pggrammar.AlterrolesetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterrolesetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterrolesetstmt([NotNull] pggrammar.AlterrolesetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.droprolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDroprolestmt([NotNull] pggrammar.DroprolestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.droprolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDroprolestmt([NotNull] pggrammar.DroprolestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.creategroupstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreategroupstmt([NotNull] pggrammar.CreategroupstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.creategroupstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreategroupstmt([NotNull] pggrammar.CreategroupstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altergroupstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltergroupstmt([NotNull] pggrammar.AltergroupstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altergroupstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltergroupstmt([NotNull] pggrammar.AltergroupstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.add_drop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_drop([NotNull] pggrammar.Add_dropContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.add_drop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_drop([NotNull] pggrammar.Add_dropContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createschemastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateschemastmt([NotNull] pggrammar.CreateschemastmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createschemastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateschemastmt([NotNull] pggrammar.CreateschemastmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optschemaname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptschemaname([NotNull] pggrammar.OptschemanameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optschemaname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptschemaname([NotNull] pggrammar.OptschemanameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optschemaeltlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptschemaeltlist([NotNull] pggrammar.OptschemaeltlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optschemaeltlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptschemaeltlist([NotNull] pggrammar.OptschemaeltlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.schema_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSchema_stmt([NotNull] pggrammar.Schema_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.schema_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSchema_stmt([NotNull] pggrammar.Schema_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.variablesetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariablesetstmt([NotNull] pggrammar.VariablesetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.variablesetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariablesetstmt([NotNull] pggrammar.VariablesetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.set_rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_rest([NotNull] pggrammar.Set_restContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.set_rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_rest([NotNull] pggrammar.Set_restContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generic_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_set([NotNull] pggrammar.Generic_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generic_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_set([NotNull] pggrammar.Generic_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.set_rest_more"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_rest_more([NotNull] pggrammar.Set_rest_moreContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.set_rest_more"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_rest_more([NotNull] pggrammar.Set_rest_moreContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.var_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_name([NotNull] pggrammar.Var_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.var_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_name([NotNull] pggrammar.Var_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.var_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_list([NotNull] pggrammar.Var_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.var_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_list([NotNull] pggrammar.Var_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.var_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_value([NotNull] pggrammar.Var_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.var_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_value([NotNull] pggrammar.Var_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.iso_level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIso_level([NotNull] pggrammar.Iso_levelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.iso_level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIso_level([NotNull] pggrammar.Iso_levelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_boolean_or_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_boolean_or_string([NotNull] pggrammar.Opt_boolean_or_stringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_boolean_or_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_boolean_or_string([NotNull] pggrammar.Opt_boolean_or_stringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.zone_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZone_value([NotNull] pggrammar.Zone_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.zone_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZone_value([NotNull] pggrammar.Zone_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_encoding"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_encoding([NotNull] pggrammar.Opt_encodingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_encoding"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_encoding([NotNull] pggrammar.Opt_encodingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.nonreservedword_or_sconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonreservedword_or_sconst([NotNull] pggrammar.Nonreservedword_or_sconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.nonreservedword_or_sconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonreservedword_or_sconst([NotNull] pggrammar.Nonreservedword_or_sconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.variableresetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableresetstmt([NotNull] pggrammar.VariableresetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.variableresetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableresetstmt([NotNull] pggrammar.VariableresetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reset_rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReset_rest([NotNull] pggrammar.Reset_restContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reset_rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReset_rest([NotNull] pggrammar.Reset_restContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generic_reset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_reset([NotNull] pggrammar.Generic_resetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generic_reset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_reset([NotNull] pggrammar.Generic_resetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.setresetclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetresetclause([NotNull] pggrammar.SetresetclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.setresetclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetresetclause([NotNull] pggrammar.SetresetclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.functionsetresetclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionsetresetclause([NotNull] pggrammar.FunctionsetresetclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.functionsetresetclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionsetresetclause([NotNull] pggrammar.FunctionsetresetclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.variableshowstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableshowstmt([NotNull] pggrammar.VariableshowstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.variableshowstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableshowstmt([NotNull] pggrammar.VariableshowstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constraintssetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintssetstmt([NotNull] pggrammar.ConstraintssetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constraintssetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintssetstmt([NotNull] pggrammar.ConstraintssetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constraints_set_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraints_set_list([NotNull] pggrammar.Constraints_set_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constraints_set_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraints_set_list([NotNull] pggrammar.Constraints_set_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constraints_set_mode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraints_set_mode([NotNull] pggrammar.Constraints_set_modeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constraints_set_mode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraints_set_mode([NotNull] pggrammar.Constraints_set_modeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.checkpointstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckpointstmt([NotNull] pggrammar.CheckpointstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.checkpointstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckpointstmt([NotNull] pggrammar.CheckpointstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.discardstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiscardstmt([NotNull] pggrammar.DiscardstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.discardstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiscardstmt([NotNull] pggrammar.DiscardstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altertablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltertablestmt([NotNull] pggrammar.AltertablestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altertablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltertablestmt([NotNull] pggrammar.AltertablestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_table_cmds"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_table_cmds([NotNull] pggrammar.Alter_table_cmdsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_table_cmds"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_table_cmds([NotNull] pggrammar.Alter_table_cmdsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.partition_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartition_cmd([NotNull] pggrammar.Partition_cmdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.partition_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartition_cmd([NotNull] pggrammar.Partition_cmdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.index_partition_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_partition_cmd([NotNull] pggrammar.Index_partition_cmdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.index_partition_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_partition_cmd([NotNull] pggrammar.Index_partition_cmdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_table_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_table_cmd([NotNull] pggrammar.Alter_table_cmdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_table_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_table_cmd([NotNull] pggrammar.Alter_table_cmdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_column_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_column_default([NotNull] pggrammar.Alter_column_defaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_column_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_column_default([NotNull] pggrammar.Alter_column_defaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_drop_behavior"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_drop_behavior([NotNull] pggrammar.Opt_drop_behaviorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_drop_behavior"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_drop_behavior([NotNull] pggrammar.Opt_drop_behaviorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_collate_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_collate_clause([NotNull] pggrammar.Opt_collate_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_collate_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_collate_clause([NotNull] pggrammar.Opt_collate_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_using([NotNull] pggrammar.Alter_usingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_using([NotNull] pggrammar.Alter_usingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.replica_identity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplica_identity([NotNull] pggrammar.Replica_identityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.replica_identity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplica_identity([NotNull] pggrammar.Replica_identityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reloptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReloptions([NotNull] pggrammar.ReloptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reloptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReloptions([NotNull] pggrammar.ReloptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_reloptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_reloptions([NotNull] pggrammar.Opt_reloptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_reloptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_reloptions([NotNull] pggrammar.Opt_reloptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reloption_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReloption_list([NotNull] pggrammar.Reloption_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reloption_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReloption_list([NotNull] pggrammar.Reloption_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reloption_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReloption_elem([NotNull] pggrammar.Reloption_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reloption_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReloption_elem([NotNull] pggrammar.Reloption_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_identity_column_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_identity_column_option_list([NotNull] pggrammar.Alter_identity_column_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_identity_column_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_identity_column_option_list([NotNull] pggrammar.Alter_identity_column_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_identity_column_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_identity_column_option([NotNull] pggrammar.Alter_identity_column_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_identity_column_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_identity_column_option([NotNull] pggrammar.Alter_identity_column_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.partitionboundspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionboundspec([NotNull] pggrammar.PartitionboundspecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.partitionboundspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionboundspec([NotNull] pggrammar.PartitionboundspecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.hash_partbound_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHash_partbound_elem([NotNull] pggrammar.Hash_partbound_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.hash_partbound_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHash_partbound_elem([NotNull] pggrammar.Hash_partbound_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.hash_partbound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHash_partbound([NotNull] pggrammar.Hash_partboundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.hash_partbound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHash_partbound([NotNull] pggrammar.Hash_partboundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altercompositetypestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltercompositetypestmt([NotNull] pggrammar.AltercompositetypestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altercompositetypestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltercompositetypestmt([NotNull] pggrammar.AltercompositetypestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_type_cmds"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_type_cmds([NotNull] pggrammar.Alter_type_cmdsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_type_cmds"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_type_cmds([NotNull] pggrammar.Alter_type_cmdsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_type_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_type_cmd([NotNull] pggrammar.Alter_type_cmdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_type_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_type_cmd([NotNull] pggrammar.Alter_type_cmdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.closeportalstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloseportalstmt([NotNull] pggrammar.CloseportalstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.closeportalstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloseportalstmt([NotNull] pggrammar.CloseportalstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopystmt([NotNull] pggrammar.CopystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopystmt([NotNull] pggrammar.CopystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_from"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_from([NotNull] pggrammar.Copy_fromContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_from"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_from([NotNull] pggrammar.Copy_fromContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_program([NotNull] pggrammar.Opt_programContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_program([NotNull] pggrammar.Opt_programContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_file_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_file_name([NotNull] pggrammar.Copy_file_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_file_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_file_name([NotNull] pggrammar.Copy_file_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_options([NotNull] pggrammar.Copy_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_options([NotNull] pggrammar.Copy_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_opt_list([NotNull] pggrammar.Copy_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_opt_list([NotNull] pggrammar.Copy_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_opt_item([NotNull] pggrammar.Copy_opt_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_opt_item([NotNull] pggrammar.Copy_opt_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_binary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_binary([NotNull] pggrammar.Opt_binaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_binary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_binary([NotNull] pggrammar.Opt_binaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_delimiter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_delimiter([NotNull] pggrammar.Copy_delimiterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_delimiter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_delimiter([NotNull] pggrammar.Copy_delimiterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_using([NotNull] pggrammar.Opt_usingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_using([NotNull] pggrammar.Opt_usingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_generic_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_generic_opt_list([NotNull] pggrammar.Copy_generic_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_generic_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_generic_opt_list([NotNull] pggrammar.Copy_generic_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_generic_opt_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_generic_opt_elem([NotNull] pggrammar.Copy_generic_opt_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_generic_opt_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_generic_opt_elem([NotNull] pggrammar.Copy_generic_opt_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_generic_opt_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_generic_opt_arg([NotNull] pggrammar.Copy_generic_opt_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_generic_opt_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_generic_opt_arg([NotNull] pggrammar.Copy_generic_opt_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_generic_opt_arg_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_generic_opt_arg_list([NotNull] pggrammar.Copy_generic_opt_arg_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_generic_opt_arg_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_generic_opt_arg_list([NotNull] pggrammar.Copy_generic_opt_arg_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.copy_generic_opt_arg_list_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCopy_generic_opt_arg_list_item([NotNull] pggrammar.Copy_generic_opt_arg_list_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.copy_generic_opt_arg_list_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCopy_generic_opt_arg_list_item([NotNull] pggrammar.Copy_generic_opt_arg_list_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatestmt([NotNull] pggrammar.CreatestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatestmt([NotNull] pggrammar.CreatestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opttemp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpttemp([NotNull] pggrammar.OpttempContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opttemp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpttemp([NotNull] pggrammar.OpttempContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opttableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpttableelementlist([NotNull] pggrammar.OpttableelementlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opttableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpttableelementlist([NotNull] pggrammar.OpttableelementlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opttypedtableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpttypedtableelementlist([NotNull] pggrammar.OpttypedtableelementlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opttypedtableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpttypedtableelementlist([NotNull] pggrammar.OpttypedtableelementlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableelementlist([NotNull] pggrammar.TableelementlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableelementlist([NotNull] pggrammar.TableelementlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.typedtableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedtableelementlist([NotNull] pggrammar.TypedtableelementlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.typedtableelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedtableelementlist([NotNull] pggrammar.TypedtableelementlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tableelement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableelement([NotNull] pggrammar.TableelementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tableelement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableelement([NotNull] pggrammar.TableelementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.typedtableelement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedtableelement([NotNull] pggrammar.TypedtableelementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.typedtableelement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedtableelement([NotNull] pggrammar.TypedtableelementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.columnDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnDef([NotNull] pggrammar.ColumnDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.columnDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnDef([NotNull] pggrammar.ColumnDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.columnOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnOptions([NotNull] pggrammar.ColumnOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.columnOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnOptions([NotNull] pggrammar.ColumnOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.colquallist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColquallist([NotNull] pggrammar.ColquallistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.colquallist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColquallist([NotNull] pggrammar.ColquallistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.colconstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColconstraint([NotNull] pggrammar.ColconstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.colconstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColconstraint([NotNull] pggrammar.ColconstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.colconstraintelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColconstraintelem([NotNull] pggrammar.ColconstraintelemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.colconstraintelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColconstraintelem([NotNull] pggrammar.ColconstraintelemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generated_when"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenerated_when([NotNull] pggrammar.Generated_whenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generated_when"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenerated_when([NotNull] pggrammar.Generated_whenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constraintattr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintattr([NotNull] pggrammar.ConstraintattrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constraintattr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintattr([NotNull] pggrammar.ConstraintattrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tablelikeclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablelikeclause([NotNull] pggrammar.TablelikeclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tablelikeclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablelikeclause([NotNull] pggrammar.TablelikeclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tablelikeoptionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablelikeoptionlist([NotNull] pggrammar.TablelikeoptionlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tablelikeoptionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablelikeoptionlist([NotNull] pggrammar.TablelikeoptionlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tablelikeoption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablelikeoption([NotNull] pggrammar.TablelikeoptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tablelikeoption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablelikeoption([NotNull] pggrammar.TablelikeoptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tableconstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableconstraint([NotNull] pggrammar.TableconstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tableconstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableconstraint([NotNull] pggrammar.TableconstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constraintelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintelem([NotNull] pggrammar.ConstraintelemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constraintelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintelem([NotNull] pggrammar.ConstraintelemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_no_inherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_no_inherit([NotNull] pggrammar.Opt_no_inheritContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_no_inherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_no_inherit([NotNull] pggrammar.Opt_no_inheritContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_column_list([NotNull] pggrammar.Opt_column_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_column_list([NotNull] pggrammar.Opt_column_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.columnlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnlist([NotNull] pggrammar.ColumnlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.columnlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnlist([NotNull] pggrammar.ColumnlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.columnElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnElem([NotNull] pggrammar.ColumnElemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.columnElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnElem([NotNull] pggrammar.ColumnElemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_c_include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_c_include([NotNull] pggrammar.Opt_c_includeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_c_include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_c_include([NotNull] pggrammar.Opt_c_includeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.key_match"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKey_match([NotNull] pggrammar.Key_matchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.key_match"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKey_match([NotNull] pggrammar.Key_matchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.exclusionconstraintlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusionconstraintlist([NotNull] pggrammar.ExclusionconstraintlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.exclusionconstraintlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusionconstraintlist([NotNull] pggrammar.ExclusionconstraintlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.exclusionconstraintelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusionconstraintelem([NotNull] pggrammar.ExclusionconstraintelemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.exclusionconstraintelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusionconstraintelem([NotNull] pggrammar.ExclusionconstraintelemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.exclusionwhereclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusionwhereclause([NotNull] pggrammar.ExclusionwhereclauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.exclusionwhereclause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusionwhereclause([NotNull] pggrammar.ExclusionwhereclauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.key_actions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKey_actions([NotNull] pggrammar.Key_actionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.key_actions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKey_actions([NotNull] pggrammar.Key_actionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.key_update"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKey_update([NotNull] pggrammar.Key_updateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.key_update"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKey_update([NotNull] pggrammar.Key_updateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.key_delete"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKey_delete([NotNull] pggrammar.Key_deleteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.key_delete"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKey_delete([NotNull] pggrammar.Key_deleteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.key_action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKey_action([NotNull] pggrammar.Key_actionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.key_action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKey_action([NotNull] pggrammar.Key_actionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optinherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptinherit([NotNull] pggrammar.OptinheritContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optinherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptinherit([NotNull] pggrammar.OptinheritContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optpartitionspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptpartitionspec([NotNull] pggrammar.OptpartitionspecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optpartitionspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptpartitionspec([NotNull] pggrammar.OptpartitionspecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.partitionspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionspec([NotNull] pggrammar.PartitionspecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.partitionspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionspec([NotNull] pggrammar.PartitionspecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.part_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPart_params([NotNull] pggrammar.Part_paramsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.part_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPart_params([NotNull] pggrammar.Part_paramsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.part_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPart_elem([NotNull] pggrammar.Part_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.part_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPart_elem([NotNull] pggrammar.Part_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.table_access_method_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_access_method_clause([NotNull] pggrammar.Table_access_method_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.table_access_method_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_access_method_clause([NotNull] pggrammar.Table_access_method_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optwith"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptwith([NotNull] pggrammar.OptwithContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optwith"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptwith([NotNull] pggrammar.OptwithContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.oncommitoption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOncommitoption([NotNull] pggrammar.OncommitoptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.oncommitoption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOncommitoption([NotNull] pggrammar.OncommitoptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opttablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpttablespace([NotNull] pggrammar.OpttablespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opttablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpttablespace([NotNull] pggrammar.OpttablespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optconstablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptconstablespace([NotNull] pggrammar.OptconstablespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optconstablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptconstablespace([NotNull] pggrammar.OptconstablespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.existingindex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExistingindex([NotNull] pggrammar.ExistingindexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.existingindex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExistingindex([NotNull] pggrammar.ExistingindexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createstatsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatestatsstmt([NotNull] pggrammar.CreatestatsstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createstatsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatestatsstmt([NotNull] pggrammar.CreatestatsstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterstatsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterstatsstmt([NotNull] pggrammar.AlterstatsstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterstatsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterstatsstmt([NotNull] pggrammar.AlterstatsstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createasstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateasstmt([NotNull] pggrammar.CreateasstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createasstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateasstmt([NotNull] pggrammar.CreateasstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.create_as_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_as_target([NotNull] pggrammar.Create_as_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.create_as_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_as_target([NotNull] pggrammar.Create_as_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_with_data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_with_data([NotNull] pggrammar.Opt_with_dataContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_with_data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_with_data([NotNull] pggrammar.Opt_with_dataContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.creatematviewstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatematviewstmt([NotNull] pggrammar.CreatematviewstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.creatematviewstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatematviewstmt([NotNull] pggrammar.CreatematviewstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.create_mv_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_mv_target([NotNull] pggrammar.Create_mv_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.create_mv_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_mv_target([NotNull] pggrammar.Create_mv_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optnolog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptnolog([NotNull] pggrammar.OptnologContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optnolog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptnolog([NotNull] pggrammar.OptnologContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.refreshmatviewstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRefreshmatviewstmt([NotNull] pggrammar.RefreshmatviewstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.refreshmatviewstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRefreshmatviewstmt([NotNull] pggrammar.RefreshmatviewstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createseqstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateseqstmt([NotNull] pggrammar.CreateseqstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createseqstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateseqstmt([NotNull] pggrammar.CreateseqstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterseqstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterseqstmt([NotNull] pggrammar.AlterseqstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterseqstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterseqstmt([NotNull] pggrammar.AlterseqstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optseqoptlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptseqoptlist([NotNull] pggrammar.OptseqoptlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optseqoptlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptseqoptlist([NotNull] pggrammar.OptseqoptlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optparenthesizedseqoptlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptparenthesizedseqoptlist([NotNull] pggrammar.OptparenthesizedseqoptlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optparenthesizedseqoptlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptparenthesizedseqoptlist([NotNull] pggrammar.OptparenthesizedseqoptlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.seqoptlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeqoptlist([NotNull] pggrammar.SeqoptlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.seqoptlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeqoptlist([NotNull] pggrammar.SeqoptlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.seqoptelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeqoptelem([NotNull] pggrammar.SeqoptelemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.seqoptelem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeqoptelem([NotNull] pggrammar.SeqoptelemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_by"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_by([NotNull] pggrammar.Opt_byContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_by"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_by([NotNull] pggrammar.Opt_byContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.numericonly"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericonly([NotNull] pggrammar.NumericonlyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.numericonly"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericonly([NotNull] pggrammar.NumericonlyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.numericonly_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericonly_list([NotNull] pggrammar.Numericonly_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.numericonly_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericonly_list([NotNull] pggrammar.Numericonly_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createplangstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateplangstmt([NotNull] pggrammar.CreateplangstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createplangstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateplangstmt([NotNull] pggrammar.CreateplangstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_trusted"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_trusted([NotNull] pggrammar.Opt_trustedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_trusted"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_trusted([NotNull] pggrammar.Opt_trustedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.handler_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandler_name([NotNull] pggrammar.Handler_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.handler_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandler_name([NotNull] pggrammar.Handler_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_inline_handler"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_inline_handler([NotNull] pggrammar.Opt_inline_handlerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_inline_handler"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_inline_handler([NotNull] pggrammar.Opt_inline_handlerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.validator_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidator_clause([NotNull] pggrammar.Validator_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.validator_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidator_clause([NotNull] pggrammar.Validator_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_validator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_validator([NotNull] pggrammar.Opt_validatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_validator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_validator([NotNull] pggrammar.Opt_validatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_procedural"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_procedural([NotNull] pggrammar.Opt_proceduralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_procedural"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_procedural([NotNull] pggrammar.Opt_proceduralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createtablespacestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatetablespacestmt([NotNull] pggrammar.CreatetablespacestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createtablespacestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatetablespacestmt([NotNull] pggrammar.CreatetablespacestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opttablespaceowner"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpttablespaceowner([NotNull] pggrammar.OpttablespaceownerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opttablespaceowner"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpttablespaceowner([NotNull] pggrammar.OpttablespaceownerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.droptablespacestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDroptablespacestmt([NotNull] pggrammar.DroptablespacestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.droptablespacestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDroptablespacestmt([NotNull] pggrammar.DroptablespacestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createextensionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateextensionstmt([NotNull] pggrammar.CreateextensionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createextensionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateextensionstmt([NotNull] pggrammar.CreateextensionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.create_extension_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_extension_opt_list([NotNull] pggrammar.Create_extension_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.create_extension_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_extension_opt_list([NotNull] pggrammar.Create_extension_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.create_extension_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_extension_opt_item([NotNull] pggrammar.Create_extension_opt_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.create_extension_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_extension_opt_item([NotNull] pggrammar.Create_extension_opt_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterextensionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterextensionstmt([NotNull] pggrammar.AlterextensionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterextensionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterextensionstmt([NotNull] pggrammar.AlterextensionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_extension_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_extension_opt_list([NotNull] pggrammar.Alter_extension_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_extension_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_extension_opt_list([NotNull] pggrammar.Alter_extension_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_extension_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_extension_opt_item([NotNull] pggrammar.Alter_extension_opt_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_extension_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_extension_opt_item([NotNull] pggrammar.Alter_extension_opt_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterextensioncontentsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterextensioncontentsstmt([NotNull] pggrammar.AlterextensioncontentsstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterextensioncontentsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterextensioncontentsstmt([NotNull] pggrammar.AlterextensioncontentsstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createfdwstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatefdwstmt([NotNull] pggrammar.CreatefdwstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createfdwstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatefdwstmt([NotNull] pggrammar.CreatefdwstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.fdw_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFdw_option([NotNull] pggrammar.Fdw_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.fdw_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFdw_option([NotNull] pggrammar.Fdw_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.fdw_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFdw_options([NotNull] pggrammar.Fdw_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.fdw_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFdw_options([NotNull] pggrammar.Fdw_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_fdw_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_fdw_options([NotNull] pggrammar.Opt_fdw_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_fdw_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_fdw_options([NotNull] pggrammar.Opt_fdw_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterfdwstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterfdwstmt([NotNull] pggrammar.AlterfdwstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterfdwstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterfdwstmt([NotNull] pggrammar.AlterfdwstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.create_generic_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_generic_options([NotNull] pggrammar.Create_generic_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.create_generic_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_generic_options([NotNull] pggrammar.Create_generic_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generic_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_option_list([NotNull] pggrammar.Generic_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generic_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_option_list([NotNull] pggrammar.Generic_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_generic_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_generic_options([NotNull] pggrammar.Alter_generic_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_generic_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_generic_options([NotNull] pggrammar.Alter_generic_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_generic_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_generic_option_list([NotNull] pggrammar.Alter_generic_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_generic_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_generic_option_list([NotNull] pggrammar.Alter_generic_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alter_generic_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlter_generic_option_elem([NotNull] pggrammar.Alter_generic_option_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alter_generic_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlter_generic_option_elem([NotNull] pggrammar.Alter_generic_option_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generic_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_option_elem([NotNull] pggrammar.Generic_option_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generic_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_option_elem([NotNull] pggrammar.Generic_option_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generic_option_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_option_name([NotNull] pggrammar.Generic_option_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generic_option_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_option_name([NotNull] pggrammar.Generic_option_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generic_option_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_option_arg([NotNull] pggrammar.Generic_option_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generic_option_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_option_arg([NotNull] pggrammar.Generic_option_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createforeignserverstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateforeignserverstmt([NotNull] pggrammar.CreateforeignserverstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createforeignserverstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateforeignserverstmt([NotNull] pggrammar.CreateforeignserverstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_type([NotNull] pggrammar.Opt_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_type([NotNull] pggrammar.Opt_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.foreign_server_version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeign_server_version([NotNull] pggrammar.Foreign_server_versionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.foreign_server_version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeign_server_version([NotNull] pggrammar.Foreign_server_versionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_foreign_server_version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_foreign_server_version([NotNull] pggrammar.Opt_foreign_server_versionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_foreign_server_version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_foreign_server_version([NotNull] pggrammar.Opt_foreign_server_versionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterforeignserverstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterforeignserverstmt([NotNull] pggrammar.AlterforeignserverstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterforeignserverstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterforeignserverstmt([NotNull] pggrammar.AlterforeignserverstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createforeigntablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateforeigntablestmt([NotNull] pggrammar.CreateforeigntablestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createforeigntablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateforeigntablestmt([NotNull] pggrammar.CreateforeigntablestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.importforeignschemastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportforeignschemastmt([NotNull] pggrammar.ImportforeignschemastmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.importforeignschemastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportforeignschemastmt([NotNull] pggrammar.ImportforeignschemastmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.import_qualification_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_qualification_type([NotNull] pggrammar.Import_qualification_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.import_qualification_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_qualification_type([NotNull] pggrammar.Import_qualification_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.import_qualification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_qualification([NotNull] pggrammar.Import_qualificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.import_qualification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_qualification([NotNull] pggrammar.Import_qualificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createusermappingstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateusermappingstmt([NotNull] pggrammar.CreateusermappingstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createusermappingstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateusermappingstmt([NotNull] pggrammar.CreateusermappingstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.auth_ident"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAuth_ident([NotNull] pggrammar.Auth_identContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.auth_ident"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAuth_ident([NotNull] pggrammar.Auth_identContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropusermappingstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropusermappingstmt([NotNull] pggrammar.DropusermappingstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropusermappingstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropusermappingstmt([NotNull] pggrammar.DropusermappingstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterusermappingstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterusermappingstmt([NotNull] pggrammar.AlterusermappingstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterusermappingstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterusermappingstmt([NotNull] pggrammar.AlterusermappingstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createpolicystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatepolicystmt([NotNull] pggrammar.CreatepolicystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createpolicystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatepolicystmt([NotNull] pggrammar.CreatepolicystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterpolicystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterpolicystmt([NotNull] pggrammar.AlterpolicystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterpolicystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterpolicystmt([NotNull] pggrammar.AlterpolicystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsecurityoptionalexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsecurityoptionalexpr([NotNull] pggrammar.RowsecurityoptionalexprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsecurityoptionalexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsecurityoptionalexpr([NotNull] pggrammar.RowsecurityoptionalexprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsecurityoptionalwithcheck"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsecurityoptionalwithcheck([NotNull] pggrammar.RowsecurityoptionalwithcheckContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsecurityoptionalwithcheck"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsecurityoptionalwithcheck([NotNull] pggrammar.RowsecurityoptionalwithcheckContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsecuritydefaulttorole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsecuritydefaulttorole([NotNull] pggrammar.RowsecuritydefaulttoroleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsecuritydefaulttorole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsecuritydefaulttorole([NotNull] pggrammar.RowsecuritydefaulttoroleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsecurityoptionaltorole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsecurityoptionaltorole([NotNull] pggrammar.RowsecurityoptionaltoroleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsecurityoptionaltorole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsecurityoptionaltorole([NotNull] pggrammar.RowsecurityoptionaltoroleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsecuritydefaultpermissive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsecuritydefaultpermissive([NotNull] pggrammar.RowsecuritydefaultpermissiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsecuritydefaultpermissive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsecuritydefaultpermissive([NotNull] pggrammar.RowsecuritydefaultpermissiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsecuritydefaultforcmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsecuritydefaultforcmd([NotNull] pggrammar.RowsecuritydefaultforcmdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsecuritydefaultforcmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsecuritydefaultforcmd([NotNull] pggrammar.RowsecuritydefaultforcmdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.row_security_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_security_cmd([NotNull] pggrammar.Row_security_cmdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.row_security_cmd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_security_cmd([NotNull] pggrammar.Row_security_cmdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createamstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateamstmt([NotNull] pggrammar.CreateamstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createamstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateamstmt([NotNull] pggrammar.CreateamstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.am_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAm_type([NotNull] pggrammar.Am_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.am_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAm_type([NotNull] pggrammar.Am_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createtrigstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatetrigstmt([NotNull] pggrammar.CreatetrigstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createtrigstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatetrigstmt([NotNull] pggrammar.CreatetrigstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggeractiontime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggeractiontime([NotNull] pggrammar.TriggeractiontimeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggeractiontime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggeractiontime([NotNull] pggrammar.TriggeractiontimeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerevents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerevents([NotNull] pggrammar.TriggereventsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerevents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerevents([NotNull] pggrammar.TriggereventsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggeroneevent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggeroneevent([NotNull] pggrammar.TriggeroneeventContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggeroneevent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggeroneevent([NotNull] pggrammar.TriggeroneeventContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerreferencing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerreferencing([NotNull] pggrammar.TriggerreferencingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerreferencing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerreferencing([NotNull] pggrammar.TriggerreferencingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggertransitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggertransitions([NotNull] pggrammar.TriggertransitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggertransitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggertransitions([NotNull] pggrammar.TriggertransitionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggertransition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggertransition([NotNull] pggrammar.TriggertransitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggertransition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggertransition([NotNull] pggrammar.TriggertransitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transitionoldornew"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransitionoldornew([NotNull] pggrammar.TransitionoldornewContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transitionoldornew"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransitionoldornew([NotNull] pggrammar.TransitionoldornewContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transitionrowortable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransitionrowortable([NotNull] pggrammar.TransitionrowortableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transitionrowortable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransitionrowortable([NotNull] pggrammar.TransitionrowortableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transitionrelname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransitionrelname([NotNull] pggrammar.TransitionrelnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transitionrelname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransitionrelname([NotNull] pggrammar.TransitionrelnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerforspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerforspec([NotNull] pggrammar.TriggerforspecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerforspec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerforspec([NotNull] pggrammar.TriggerforspecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerforopteach"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerforopteach([NotNull] pggrammar.TriggerforopteachContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerforopteach"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerforopteach([NotNull] pggrammar.TriggerforopteachContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerfortype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerfortype([NotNull] pggrammar.TriggerfortypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerfortype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerfortype([NotNull] pggrammar.TriggerfortypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerwhen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerwhen([NotNull] pggrammar.TriggerwhenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerwhen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerwhen([NotNull] pggrammar.TriggerwhenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.function_or_procedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_or_procedure([NotNull] pggrammar.Function_or_procedureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.function_or_procedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_or_procedure([NotNull] pggrammar.Function_or_procedureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerfuncargs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerfuncargs([NotNull] pggrammar.TriggerfuncargsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerfuncargs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerfuncargs([NotNull] pggrammar.TriggerfuncargsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.triggerfuncarg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerfuncarg([NotNull] pggrammar.TriggerfuncargContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.triggerfuncarg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerfuncarg([NotNull] pggrammar.TriggerfuncargContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.optconstrfromtable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptconstrfromtable([NotNull] pggrammar.OptconstrfromtableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.optconstrfromtable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptconstrfromtable([NotNull] pggrammar.OptconstrfromtableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constraintattributespec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintattributespec([NotNull] pggrammar.ConstraintattributespecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constraintattributespec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintattributespec([NotNull] pggrammar.ConstraintattributespecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constraintattributeElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintattributeElem([NotNull] pggrammar.ConstraintattributeElemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constraintattributeElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintattributeElem([NotNull] pggrammar.ConstraintattributeElemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createeventtrigstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateeventtrigstmt([NotNull] pggrammar.CreateeventtrigstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createeventtrigstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateeventtrigstmt([NotNull] pggrammar.CreateeventtrigstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.event_trigger_when_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_trigger_when_list([NotNull] pggrammar.Event_trigger_when_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.event_trigger_when_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_trigger_when_list([NotNull] pggrammar.Event_trigger_when_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.event_trigger_when_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_trigger_when_item([NotNull] pggrammar.Event_trigger_when_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.event_trigger_when_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_trigger_when_item([NotNull] pggrammar.Event_trigger_when_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.event_trigger_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_trigger_value_list([NotNull] pggrammar.Event_trigger_value_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.event_trigger_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_trigger_value_list([NotNull] pggrammar.Event_trigger_value_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altereventtrigstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltereventtrigstmt([NotNull] pggrammar.AltereventtrigstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altereventtrigstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltereventtrigstmt([NotNull] pggrammar.AltereventtrigstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.enable_trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnable_trigger([NotNull] pggrammar.Enable_triggerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.enable_trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnable_trigger([NotNull] pggrammar.Enable_triggerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createassertionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateassertionstmt([NotNull] pggrammar.CreateassertionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createassertionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateassertionstmt([NotNull] pggrammar.CreateassertionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.definestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinestmt([NotNull] pggrammar.DefinestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.definestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinestmt([NotNull] pggrammar.DefinestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinition([NotNull] pggrammar.DefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinition([NotNull] pggrammar.DefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDef_list([NotNull] pggrammar.Def_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDef_list([NotNull] pggrammar.Def_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.def_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDef_elem([NotNull] pggrammar.Def_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.def_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDef_elem([NotNull] pggrammar.Def_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.def_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDef_arg([NotNull] pggrammar.Def_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.def_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDef_arg([NotNull] pggrammar.Def_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.old_aggr_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOld_aggr_definition([NotNull] pggrammar.Old_aggr_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.old_aggr_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOld_aggr_definition([NotNull] pggrammar.Old_aggr_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.old_aggr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOld_aggr_list([NotNull] pggrammar.Old_aggr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.old_aggr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOld_aggr_list([NotNull] pggrammar.Old_aggr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.old_aggr_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOld_aggr_elem([NotNull] pggrammar.Old_aggr_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.old_aggr_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOld_aggr_elem([NotNull] pggrammar.Old_aggr_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_enum_val_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_enum_val_list([NotNull] pggrammar.Opt_enum_val_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_enum_val_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_enum_val_list([NotNull] pggrammar.Opt_enum_val_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.enum_val_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_val_list([NotNull] pggrammar.Enum_val_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.enum_val_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_val_list([NotNull] pggrammar.Enum_val_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterenumstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterenumstmt([NotNull] pggrammar.AlterenumstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterenumstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterenumstmt([NotNull] pggrammar.AlterenumstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_if_not_exists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_if_not_exists([NotNull] pggrammar.Opt_if_not_existsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_if_not_exists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_if_not_exists([NotNull] pggrammar.Opt_if_not_existsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createopclassstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateopclassstmt([NotNull] pggrammar.CreateopclassstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createopclassstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateopclassstmt([NotNull] pggrammar.CreateopclassstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opclass_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpclass_item_list([NotNull] pggrammar.Opclass_item_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opclass_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpclass_item_list([NotNull] pggrammar.Opclass_item_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opclass_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpclass_item([NotNull] pggrammar.Opclass_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opclass_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpclass_item([NotNull] pggrammar.Opclass_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_default([NotNull] pggrammar.Opt_defaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_default([NotNull] pggrammar.Opt_defaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_opfamily"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_opfamily([NotNull] pggrammar.Opt_opfamilyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_opfamily"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_opfamily([NotNull] pggrammar.Opt_opfamilyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opclass_purpose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpclass_purpose([NotNull] pggrammar.Opclass_purposeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opclass_purpose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpclass_purpose([NotNull] pggrammar.Opclass_purposeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_recheck"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_recheck([NotNull] pggrammar.Opt_recheckContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_recheck"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_recheck([NotNull] pggrammar.Opt_recheckContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createopfamilystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateopfamilystmt([NotNull] pggrammar.CreateopfamilystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createopfamilystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateopfamilystmt([NotNull] pggrammar.CreateopfamilystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alteropfamilystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlteropfamilystmt([NotNull] pggrammar.AlteropfamilystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alteropfamilystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlteropfamilystmt([NotNull] pggrammar.AlteropfamilystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opclass_drop_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpclass_drop_list([NotNull] pggrammar.Opclass_drop_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opclass_drop_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpclass_drop_list([NotNull] pggrammar.Opclass_drop_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opclass_drop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpclass_drop([NotNull] pggrammar.Opclass_dropContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opclass_drop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpclass_drop([NotNull] pggrammar.Opclass_dropContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropopclassstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropopclassstmt([NotNull] pggrammar.DropopclassstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropopclassstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropopclassstmt([NotNull] pggrammar.DropopclassstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropopfamilystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropopfamilystmt([NotNull] pggrammar.DropopfamilystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropopfamilystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropopfamilystmt([NotNull] pggrammar.DropopfamilystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropownedstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropownedstmt([NotNull] pggrammar.DropownedstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropownedstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropownedstmt([NotNull] pggrammar.DropownedstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reassignownedstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReassignownedstmt([NotNull] pggrammar.ReassignownedstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reassignownedstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReassignownedstmt([NotNull] pggrammar.ReassignownedstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropstmt([NotNull] pggrammar.DropstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropstmt([NotNull] pggrammar.DropstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.object_type_any_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_type_any_name([NotNull] pggrammar.Object_type_any_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.object_type_any_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_type_any_name([NotNull] pggrammar.Object_type_any_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.object_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_type_name([NotNull] pggrammar.Object_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.object_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_type_name([NotNull] pggrammar.Object_type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.drop_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop_type_name([NotNull] pggrammar.Drop_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.drop_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop_type_name([NotNull] pggrammar.Drop_type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.object_type_name_on_any_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_type_name_on_any_name([NotNull] pggrammar.Object_type_name_on_any_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.object_type_name_on_any_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_type_name_on_any_name([NotNull] pggrammar.Object_type_name_on_any_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.any_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAny_name_list([NotNull] pggrammar.Any_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.any_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAny_name_list([NotNull] pggrammar.Any_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.any_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAny_name([NotNull] pggrammar.Any_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.any_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAny_name([NotNull] pggrammar.Any_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.attrs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttrs([NotNull] pggrammar.AttrsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.attrs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttrs([NotNull] pggrammar.AttrsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.type_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_name_list([NotNull] pggrammar.Type_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.type_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_name_list([NotNull] pggrammar.Type_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.truncatestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTruncatestmt([NotNull] pggrammar.TruncatestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.truncatestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTruncatestmt([NotNull] pggrammar.TruncatestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_restart_seqs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_restart_seqs([NotNull] pggrammar.Opt_restart_seqsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_restart_seqs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_restart_seqs([NotNull] pggrammar.Opt_restart_seqsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.commentstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommentstmt([NotNull] pggrammar.CommentstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.commentstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommentstmt([NotNull] pggrammar.CommentstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.comment_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComment_text([NotNull] pggrammar.Comment_textContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.comment_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComment_text([NotNull] pggrammar.Comment_textContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.seclabelstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeclabelstmt([NotNull] pggrammar.SeclabelstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.seclabelstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeclabelstmt([NotNull] pggrammar.SeclabelstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_provider"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_provider([NotNull] pggrammar.Opt_providerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_provider"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_provider([NotNull] pggrammar.Opt_providerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.security_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecurity_label([NotNull] pggrammar.Security_labelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.security_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecurity_label([NotNull] pggrammar.Security_labelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.fetchstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFetchstmt([NotNull] pggrammar.FetchstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.fetchstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFetchstmt([NotNull] pggrammar.FetchstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.fetch_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFetch_args([NotNull] pggrammar.Fetch_argsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.fetch_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFetch_args([NotNull] pggrammar.Fetch_argsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.from_in"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrom_in([NotNull] pggrammar.From_inContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.from_in"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrom_in([NotNull] pggrammar.From_inContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_from_in"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_from_in([NotNull] pggrammar.Opt_from_inContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_from_in"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_from_in([NotNull] pggrammar.Opt_from_inContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.grantstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantstmt([NotNull] pggrammar.GrantstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.grantstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantstmt([NotNull] pggrammar.GrantstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.revokestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRevokestmt([NotNull] pggrammar.RevokestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.revokestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRevokestmt([NotNull] pggrammar.RevokestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.privileges"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrivileges([NotNull] pggrammar.PrivilegesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.privileges"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrivileges([NotNull] pggrammar.PrivilegesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.privilege_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrivilege_list([NotNull] pggrammar.Privilege_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.privilege_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrivilege_list([NotNull] pggrammar.Privilege_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.privilege"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrivilege([NotNull] pggrammar.PrivilegeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.privilege"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrivilege([NotNull] pggrammar.PrivilegeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.privilege_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrivilege_target([NotNull] pggrammar.Privilege_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.privilege_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrivilege_target([NotNull] pggrammar.Privilege_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.grantee_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantee_list([NotNull] pggrammar.Grantee_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.grantee_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantee_list([NotNull] pggrammar.Grantee_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.grantee"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantee([NotNull] pggrammar.GranteeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.grantee"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantee([NotNull] pggrammar.GranteeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_grant_grant_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_grant_grant_option([NotNull] pggrammar.Opt_grant_grant_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_grant_grant_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_grant_grant_option([NotNull] pggrammar.Opt_grant_grant_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.grantrolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantrolestmt([NotNull] pggrammar.GrantrolestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.grantrolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantrolestmt([NotNull] pggrammar.GrantrolestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.revokerolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRevokerolestmt([NotNull] pggrammar.RevokerolestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.revokerolestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRevokerolestmt([NotNull] pggrammar.RevokerolestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_grant_admin_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_grant_admin_option([NotNull] pggrammar.Opt_grant_admin_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_grant_admin_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_grant_admin_option([NotNull] pggrammar.Opt_grant_admin_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_granted_by"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_granted_by([NotNull] pggrammar.Opt_granted_byContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_granted_by"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_granted_by([NotNull] pggrammar.Opt_granted_byContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterdefaultprivilegesstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterdefaultprivilegesstmt([NotNull] pggrammar.AlterdefaultprivilegesstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterdefaultprivilegesstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterdefaultprivilegesstmt([NotNull] pggrammar.AlterdefaultprivilegesstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.defacloptionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefacloptionlist([NotNull] pggrammar.DefacloptionlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.defacloptionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefacloptionlist([NotNull] pggrammar.DefacloptionlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.defacloption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefacloption([NotNull] pggrammar.DefacloptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.defacloption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefacloption([NotNull] pggrammar.DefacloptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.defaclaction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaclaction([NotNull] pggrammar.DefaclactionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.defaclaction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaclaction([NotNull] pggrammar.DefaclactionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.defacl_privilege_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefacl_privilege_target([NotNull] pggrammar.Defacl_privilege_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.defacl_privilege_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefacl_privilege_target([NotNull] pggrammar.Defacl_privilege_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.indexstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexstmt([NotNull] pggrammar.IndexstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.indexstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexstmt([NotNull] pggrammar.IndexstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_unique"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_unique([NotNull] pggrammar.Opt_uniqueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_unique"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_unique([NotNull] pggrammar.Opt_uniqueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_concurrently"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_concurrently([NotNull] pggrammar.Opt_concurrentlyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_concurrently"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_concurrently([NotNull] pggrammar.Opt_concurrentlyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_index_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_index_name([NotNull] pggrammar.Opt_index_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_index_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_index_name([NotNull] pggrammar.Opt_index_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.access_method_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_method_clause([NotNull] pggrammar.Access_method_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.access_method_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_method_clause([NotNull] pggrammar.Access_method_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.index_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_params([NotNull] pggrammar.Index_paramsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.index_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_params([NotNull] pggrammar.Index_paramsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.index_elem_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_elem_options([NotNull] pggrammar.Index_elem_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.index_elem_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_elem_options([NotNull] pggrammar.Index_elem_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.index_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_elem([NotNull] pggrammar.Index_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.index_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_elem([NotNull] pggrammar.Index_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_include([NotNull] pggrammar.Opt_includeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_include([NotNull] pggrammar.Opt_includeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.index_including_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_including_params([NotNull] pggrammar.Index_including_paramsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.index_including_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_including_params([NotNull] pggrammar.Index_including_paramsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_collate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_collate([NotNull] pggrammar.Opt_collateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_collate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_collate([NotNull] pggrammar.Opt_collateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_class([NotNull] pggrammar.Opt_classContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_class([NotNull] pggrammar.Opt_classContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_asc_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_asc_desc([NotNull] pggrammar.Opt_asc_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_asc_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_asc_desc([NotNull] pggrammar.Opt_asc_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_nulls_order"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_nulls_order([NotNull] pggrammar.Opt_nulls_orderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_nulls_order"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_nulls_order([NotNull] pggrammar.Opt_nulls_orderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createfunctionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatefunctionstmt([NotNull] pggrammar.CreatefunctionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createfunctionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatefunctionstmt([NotNull] pggrammar.CreatefunctionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_or_replace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_or_replace([NotNull] pggrammar.Opt_or_replaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_or_replace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_or_replace([NotNull] pggrammar.Opt_or_replaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_args([NotNull] pggrammar.Func_argsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_args([NotNull] pggrammar.Func_argsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_args_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_args_list([NotNull] pggrammar.Func_args_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_args_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_args_list([NotNull] pggrammar.Func_args_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.function_with_argtypes_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_with_argtypes_list([NotNull] pggrammar.Function_with_argtypes_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.function_with_argtypes_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_with_argtypes_list([NotNull] pggrammar.Function_with_argtypes_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.function_with_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_with_argtypes([NotNull] pggrammar.Function_with_argtypesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.function_with_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_with_argtypes([NotNull] pggrammar.Function_with_argtypesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_args_with_defaults"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_args_with_defaults([NotNull] pggrammar.Func_args_with_defaultsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_args_with_defaults"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_args_with_defaults([NotNull] pggrammar.Func_args_with_defaultsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_args_with_defaults_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_args_with_defaults_list([NotNull] pggrammar.Func_args_with_defaults_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_args_with_defaults_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_args_with_defaults_list([NotNull] pggrammar.Func_args_with_defaults_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_arg([NotNull] pggrammar.Func_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_arg([NotNull] pggrammar.Func_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.arg_class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg_class([NotNull] pggrammar.Arg_classContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.arg_class"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg_class([NotNull] pggrammar.Arg_classContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.param_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam_name([NotNull] pggrammar.Param_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.param_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam_name([NotNull] pggrammar.Param_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_return([NotNull] pggrammar.Func_returnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_return([NotNull] pggrammar.Func_returnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_type([NotNull] pggrammar.Func_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_type([NotNull] pggrammar.Func_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_arg_with_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_arg_with_default([NotNull] pggrammar.Func_arg_with_defaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_arg_with_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_arg_with_default([NotNull] pggrammar.Func_arg_with_defaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.aggr_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggr_arg([NotNull] pggrammar.Aggr_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.aggr_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggr_arg([NotNull] pggrammar.Aggr_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.aggr_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggr_args([NotNull] pggrammar.Aggr_argsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.aggr_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggr_args([NotNull] pggrammar.Aggr_argsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.aggr_args_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggr_args_list([NotNull] pggrammar.Aggr_args_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.aggr_args_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggr_args_list([NotNull] pggrammar.Aggr_args_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.aggregate_with_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregate_with_argtypes([NotNull] pggrammar.Aggregate_with_argtypesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.aggregate_with_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregate_with_argtypes([NotNull] pggrammar.Aggregate_with_argtypesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.aggregate_with_argtypes_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregate_with_argtypes_list([NotNull] pggrammar.Aggregate_with_argtypes_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.aggregate_with_argtypes_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregate_with_argtypes_list([NotNull] pggrammar.Aggregate_with_argtypes_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createfunc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatefunc_opt_list([NotNull] pggrammar.Createfunc_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createfunc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatefunc_opt_list([NotNull] pggrammar.Createfunc_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.common_func_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_func_opt_item([NotNull] pggrammar.Common_func_opt_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.common_func_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_func_opt_item([NotNull] pggrammar.Common_func_opt_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createfunc_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatefunc_opt_item([NotNull] pggrammar.Createfunc_opt_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createfunc_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatefunc_opt_item([NotNull] pggrammar.Createfunc_opt_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_as"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_as([NotNull] pggrammar.Func_asContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_as"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_as([NotNull] pggrammar.Func_asContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transform_type_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransform_type_list([NotNull] pggrammar.Transform_type_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transform_type_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransform_type_list([NotNull] pggrammar.Transform_type_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_definition([NotNull] pggrammar.Opt_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_definition([NotNull] pggrammar.Opt_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.table_func_column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_func_column([NotNull] pggrammar.Table_func_columnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.table_func_column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_func_column([NotNull] pggrammar.Table_func_columnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.table_func_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_func_column_list([NotNull] pggrammar.Table_func_column_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.table_func_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_func_column_list([NotNull] pggrammar.Table_func_column_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterfunctionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterfunctionstmt([NotNull] pggrammar.AlterfunctionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterfunctionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterfunctionstmt([NotNull] pggrammar.AlterfunctionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterfunc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterfunc_opt_list([NotNull] pggrammar.Alterfunc_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterfunc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterfunc_opt_list([NotNull] pggrammar.Alterfunc_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_restrict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_restrict([NotNull] pggrammar.Opt_restrictContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_restrict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_restrict([NotNull] pggrammar.Opt_restrictContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.removefuncstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRemovefuncstmt([NotNull] pggrammar.RemovefuncstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.removefuncstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRemovefuncstmt([NotNull] pggrammar.RemovefuncstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.removeaggrstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRemoveaggrstmt([NotNull] pggrammar.RemoveaggrstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.removeaggrstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRemoveaggrstmt([NotNull] pggrammar.RemoveaggrstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.removeoperstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRemoveoperstmt([NotNull] pggrammar.RemoveoperstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.removeoperstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRemoveoperstmt([NotNull] pggrammar.RemoveoperstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.oper_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOper_argtypes([NotNull] pggrammar.Oper_argtypesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.oper_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOper_argtypes([NotNull] pggrammar.Oper_argtypesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.any_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAny_operator([NotNull] pggrammar.Any_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.any_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAny_operator([NotNull] pggrammar.Any_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.operator_with_argtypes_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_with_argtypes_list([NotNull] pggrammar.Operator_with_argtypes_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.operator_with_argtypes_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_with_argtypes_list([NotNull] pggrammar.Operator_with_argtypes_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.operator_with_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_with_argtypes([NotNull] pggrammar.Operator_with_argtypesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.operator_with_argtypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_with_argtypes([NotNull] pggrammar.Operator_with_argtypesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dostmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDostmt([NotNull] pggrammar.DostmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dostmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDostmt([NotNull] pggrammar.DostmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dostmt_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDostmt_opt_list([NotNull] pggrammar.Dostmt_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dostmt_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDostmt_opt_list([NotNull] pggrammar.Dostmt_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dostmt_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDostmt_opt_item([NotNull] pggrammar.Dostmt_opt_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dostmt_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDostmt_opt_item([NotNull] pggrammar.Dostmt_opt_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createcaststmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatecaststmt([NotNull] pggrammar.CreatecaststmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createcaststmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatecaststmt([NotNull] pggrammar.CreatecaststmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.cast_context"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast_context([NotNull] pggrammar.Cast_contextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.cast_context"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast_context([NotNull] pggrammar.Cast_contextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropcaststmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropcaststmt([NotNull] pggrammar.DropcaststmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropcaststmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropcaststmt([NotNull] pggrammar.DropcaststmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_if_exists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_if_exists([NotNull] pggrammar.Opt_if_existsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_if_exists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_if_exists([NotNull] pggrammar.Opt_if_existsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createtransformstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatetransformstmt([NotNull] pggrammar.CreatetransformstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createtransformstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatetransformstmt([NotNull] pggrammar.CreatetransformstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transform_element_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransform_element_list([NotNull] pggrammar.Transform_element_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transform_element_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransform_element_list([NotNull] pggrammar.Transform_element_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.droptransformstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDroptransformstmt([NotNull] pggrammar.DroptransformstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.droptransformstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDroptransformstmt([NotNull] pggrammar.DroptransformstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reindexstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReindexstmt([NotNull] pggrammar.ReindexstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reindexstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReindexstmt([NotNull] pggrammar.ReindexstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reindex_target_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReindex_target_type([NotNull] pggrammar.Reindex_target_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reindex_target_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReindex_target_type([NotNull] pggrammar.Reindex_target_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reindex_target_multitable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReindex_target_multitable([NotNull] pggrammar.Reindex_target_multitableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reindex_target_multitable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReindex_target_multitable([NotNull] pggrammar.Reindex_target_multitableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reindex_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReindex_option_list([NotNull] pggrammar.Reindex_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reindex_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReindex_option_list([NotNull] pggrammar.Reindex_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reindex_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReindex_option_elem([NotNull] pggrammar.Reindex_option_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reindex_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReindex_option_elem([NotNull] pggrammar.Reindex_option_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altertblspcstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltertblspcstmt([NotNull] pggrammar.AltertblspcstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altertblspcstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltertblspcstmt([NotNull] pggrammar.AltertblspcstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.renamestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRenamestmt([NotNull] pggrammar.RenamestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.renamestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRenamestmt([NotNull] pggrammar.RenamestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_column([NotNull] pggrammar.Opt_columnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_column([NotNull] pggrammar.Opt_columnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_set_data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_set_data([NotNull] pggrammar.Opt_set_dataContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_set_data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_set_data([NotNull] pggrammar.Opt_set_dataContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterobjectdependsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterobjectdependsstmt([NotNull] pggrammar.AlterobjectdependsstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterobjectdependsstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterobjectdependsstmt([NotNull] pggrammar.AlterobjectdependsstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_no"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_no([NotNull] pggrammar.Opt_noContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_no"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_no([NotNull] pggrammar.Opt_noContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterobjectschemastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterobjectschemastmt([NotNull] pggrammar.AlterobjectschemastmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterobjectschemastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterobjectschemastmt([NotNull] pggrammar.AlterobjectschemastmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alteroperatorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlteroperatorstmt([NotNull] pggrammar.AlteroperatorstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alteroperatorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlteroperatorstmt([NotNull] pggrammar.AlteroperatorstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.operator_def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_def_list([NotNull] pggrammar.Operator_def_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.operator_def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_def_list([NotNull] pggrammar.Operator_def_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.operator_def_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_def_elem([NotNull] pggrammar.Operator_def_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.operator_def_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_def_elem([NotNull] pggrammar.Operator_def_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.operator_def_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_def_arg([NotNull] pggrammar.Operator_def_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.operator_def_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_def_arg([NotNull] pggrammar.Operator_def_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altertypestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltertypestmt([NotNull] pggrammar.AltertypestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altertypestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltertypestmt([NotNull] pggrammar.AltertypestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterownerstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterownerstmt([NotNull] pggrammar.AlterownerstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterownerstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterownerstmt([NotNull] pggrammar.AlterownerstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createpublicationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatepublicationstmt([NotNull] pggrammar.CreatepublicationstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createpublicationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatepublicationstmt([NotNull] pggrammar.CreatepublicationstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_publication_for_tables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_publication_for_tables([NotNull] pggrammar.Opt_publication_for_tablesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_publication_for_tables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_publication_for_tables([NotNull] pggrammar.Opt_publication_for_tablesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.publication_for_tables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPublication_for_tables([NotNull] pggrammar.Publication_for_tablesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.publication_for_tables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPublication_for_tables([NotNull] pggrammar.Publication_for_tablesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterpublicationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterpublicationstmt([NotNull] pggrammar.AlterpublicationstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterpublicationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterpublicationstmt([NotNull] pggrammar.AlterpublicationstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createsubscriptionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatesubscriptionstmt([NotNull] pggrammar.CreatesubscriptionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createsubscriptionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatesubscriptionstmt([NotNull] pggrammar.CreatesubscriptionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.publication_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPublication_name_list([NotNull] pggrammar.Publication_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.publication_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPublication_name_list([NotNull] pggrammar.Publication_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.publication_name_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPublication_name_item([NotNull] pggrammar.Publication_name_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.publication_name_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPublication_name_item([NotNull] pggrammar.Publication_name_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altersubscriptionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltersubscriptionstmt([NotNull] pggrammar.AltersubscriptionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altersubscriptionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltersubscriptionstmt([NotNull] pggrammar.AltersubscriptionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropsubscriptionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropsubscriptionstmt([NotNull] pggrammar.DropsubscriptionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropsubscriptionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropsubscriptionstmt([NotNull] pggrammar.DropsubscriptionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rulestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRulestmt([NotNull] pggrammar.RulestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rulestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRulestmt([NotNull] pggrammar.RulestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.ruleactionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleactionlist([NotNull] pggrammar.RuleactionlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.ruleactionlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleactionlist([NotNull] pggrammar.RuleactionlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.ruleactionmulti"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleactionmulti([NotNull] pggrammar.RuleactionmultiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.ruleactionmulti"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleactionmulti([NotNull] pggrammar.RuleactionmultiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.ruleactionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleactionstmt([NotNull] pggrammar.RuleactionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.ruleactionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleactionstmt([NotNull] pggrammar.RuleactionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.ruleactionstmtOrEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleactionstmtOrEmpty([NotNull] pggrammar.RuleactionstmtOrEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.ruleactionstmtOrEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleactionstmtOrEmpty([NotNull] pggrammar.RuleactionstmtOrEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.event"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent([NotNull] pggrammar.EventContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.event"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent([NotNull] pggrammar.EventContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_instead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_instead([NotNull] pggrammar.Opt_insteadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_instead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_instead([NotNull] pggrammar.Opt_insteadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.notifystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotifystmt([NotNull] pggrammar.NotifystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.notifystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotifystmt([NotNull] pggrammar.NotifystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.notify_payload"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotify_payload([NotNull] pggrammar.Notify_payloadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.notify_payload"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotify_payload([NotNull] pggrammar.Notify_payloadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.listenstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListenstmt([NotNull] pggrammar.ListenstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.listenstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListenstmt([NotNull] pggrammar.ListenstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.unlistenstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlistenstmt([NotNull] pggrammar.UnlistenstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.unlistenstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlistenstmt([NotNull] pggrammar.UnlistenstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transactionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransactionstmt([NotNull] pggrammar.TransactionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transactionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransactionstmt([NotNull] pggrammar.TransactionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_transaction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_transaction([NotNull] pggrammar.Opt_transactionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_transaction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_transaction([NotNull] pggrammar.Opt_transactionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transaction_mode_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransaction_mode_item([NotNull] pggrammar.Transaction_mode_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transaction_mode_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransaction_mode_item([NotNull] pggrammar.Transaction_mode_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transaction_mode_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransaction_mode_list([NotNull] pggrammar.Transaction_mode_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transaction_mode_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransaction_mode_list([NotNull] pggrammar.Transaction_mode_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.transaction_mode_list_or_empty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransaction_mode_list_or_empty([NotNull] pggrammar.Transaction_mode_list_or_emptyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.transaction_mode_list_or_empty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransaction_mode_list_or_empty([NotNull] pggrammar.Transaction_mode_list_or_emptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_transaction_chain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_transaction_chain([NotNull] pggrammar.Opt_transaction_chainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_transaction_chain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_transaction_chain([NotNull] pggrammar.Opt_transaction_chainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.viewstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewstmt([NotNull] pggrammar.ViewstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.viewstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewstmt([NotNull] pggrammar.ViewstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_check_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_check_option([NotNull] pggrammar.Opt_check_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_check_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_check_option([NotNull] pggrammar.Opt_check_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.loadstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoadstmt([NotNull] pggrammar.LoadstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.loadstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoadstmt([NotNull] pggrammar.LoadstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createdbstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatedbstmt([NotNull] pggrammar.CreatedbstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createdbstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatedbstmt([NotNull] pggrammar.CreatedbstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createdb_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatedb_opt_list([NotNull] pggrammar.Createdb_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createdb_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatedb_opt_list([NotNull] pggrammar.Createdb_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createdb_opt_items"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatedb_opt_items([NotNull] pggrammar.Createdb_opt_itemsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createdb_opt_items"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatedb_opt_items([NotNull] pggrammar.Createdb_opt_itemsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createdb_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatedb_opt_item([NotNull] pggrammar.Createdb_opt_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createdb_opt_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatedb_opt_item([NotNull] pggrammar.Createdb_opt_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createdb_opt_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatedb_opt_name([NotNull] pggrammar.Createdb_opt_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createdb_opt_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatedb_opt_name([NotNull] pggrammar.Createdb_opt_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_equal([NotNull] pggrammar.Opt_equalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_equal([NotNull] pggrammar.Opt_equalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterdatabasestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterdatabasestmt([NotNull] pggrammar.AlterdatabasestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterdatabasestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterdatabasestmt([NotNull] pggrammar.AlterdatabasestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterdatabasesetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterdatabasesetstmt([NotNull] pggrammar.AlterdatabasesetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterdatabasesetstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterdatabasesetstmt([NotNull] pggrammar.AlterdatabasesetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.dropdbstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropdbstmt([NotNull] pggrammar.DropdbstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.dropdbstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropdbstmt([NotNull] pggrammar.DropdbstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.drop_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop_option_list([NotNull] pggrammar.Drop_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.drop_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop_option_list([NotNull] pggrammar.Drop_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.drop_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop_option([NotNull] pggrammar.Drop_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.drop_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop_option([NotNull] pggrammar.Drop_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altercollationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltercollationstmt([NotNull] pggrammar.AltercollationstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altercollationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltercollationstmt([NotNull] pggrammar.AltercollationstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altersystemstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltersystemstmt([NotNull] pggrammar.AltersystemstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altersystemstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltersystemstmt([NotNull] pggrammar.AltersystemstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createdomainstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatedomainstmt([NotNull] pggrammar.CreatedomainstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createdomainstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatedomainstmt([NotNull] pggrammar.CreatedomainstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alterdomainstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterdomainstmt([NotNull] pggrammar.AlterdomainstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alterdomainstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterdomainstmt([NotNull] pggrammar.AlterdomainstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_as"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_as([NotNull] pggrammar.Opt_asContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_as"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_as([NotNull] pggrammar.Opt_asContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altertsdictionarystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltertsdictionarystmt([NotNull] pggrammar.AltertsdictionarystmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altertsdictionarystmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltertsdictionarystmt([NotNull] pggrammar.AltertsdictionarystmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.altertsconfigurationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAltertsconfigurationstmt([NotNull] pggrammar.AltertsconfigurationstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.altertsconfigurationstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAltertsconfigurationstmt([NotNull] pggrammar.AltertsconfigurationstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.any_with"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAny_with([NotNull] pggrammar.Any_withContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.any_with"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAny_with([NotNull] pggrammar.Any_withContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.createconversionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateconversionstmt([NotNull] pggrammar.CreateconversionstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.createconversionstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateconversionstmt([NotNull] pggrammar.CreateconversionstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.clusterstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClusterstmt([NotNull] pggrammar.ClusterstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.clusterstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClusterstmt([NotNull] pggrammar.ClusterstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.cluster_index_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCluster_index_specification([NotNull] pggrammar.Cluster_index_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.cluster_index_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCluster_index_specification([NotNull] pggrammar.Cluster_index_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.vacuumstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVacuumstmt([NotNull] pggrammar.VacuumstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.vacuumstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVacuumstmt([NotNull] pggrammar.VacuumstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.analyzestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnalyzestmt([NotNull] pggrammar.AnalyzestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.analyzestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnalyzestmt([NotNull] pggrammar.AnalyzestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.vac_analyze_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVac_analyze_option_list([NotNull] pggrammar.Vac_analyze_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.vac_analyze_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVac_analyze_option_list([NotNull] pggrammar.Vac_analyze_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.analyze_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnalyze_keyword([NotNull] pggrammar.Analyze_keywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.analyze_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnalyze_keyword([NotNull] pggrammar.Analyze_keywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.vac_analyze_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVac_analyze_option_elem([NotNull] pggrammar.Vac_analyze_option_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.vac_analyze_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVac_analyze_option_elem([NotNull] pggrammar.Vac_analyze_option_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.vac_analyze_option_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVac_analyze_option_name([NotNull] pggrammar.Vac_analyze_option_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.vac_analyze_option_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVac_analyze_option_name([NotNull] pggrammar.Vac_analyze_option_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.vac_analyze_option_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVac_analyze_option_arg([NotNull] pggrammar.Vac_analyze_option_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.vac_analyze_option_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVac_analyze_option_arg([NotNull] pggrammar.Vac_analyze_option_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_analyze"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_analyze([NotNull] pggrammar.Opt_analyzeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_analyze"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_analyze([NotNull] pggrammar.Opt_analyzeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_verbose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_verbose([NotNull] pggrammar.Opt_verboseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_verbose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_verbose([NotNull] pggrammar.Opt_verboseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_full"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_full([NotNull] pggrammar.Opt_fullContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_full"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_full([NotNull] pggrammar.Opt_fullContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_freeze"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_freeze([NotNull] pggrammar.Opt_freezeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_freeze"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_freeze([NotNull] pggrammar.Opt_freezeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_name_list([NotNull] pggrammar.Opt_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_name_list([NotNull] pggrammar.Opt_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.vacuum_relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVacuum_relation([NotNull] pggrammar.Vacuum_relationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.vacuum_relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVacuum_relation([NotNull] pggrammar.Vacuum_relationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.vacuum_relation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVacuum_relation_list([NotNull] pggrammar.Vacuum_relation_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.vacuum_relation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVacuum_relation_list([NotNull] pggrammar.Vacuum_relation_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_vacuum_relation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_vacuum_relation_list([NotNull] pggrammar.Opt_vacuum_relation_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_vacuum_relation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_vacuum_relation_list([NotNull] pggrammar.Opt_vacuum_relation_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.explainstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplainstmt([NotNull] pggrammar.ExplainstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.explainstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplainstmt([NotNull] pggrammar.ExplainstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.explainablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplainablestmt([NotNull] pggrammar.ExplainablestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.explainablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplainablestmt([NotNull] pggrammar.ExplainablestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.explain_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplain_option_list([NotNull] pggrammar.Explain_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.explain_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplain_option_list([NotNull] pggrammar.Explain_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.explain_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplain_option_elem([NotNull] pggrammar.Explain_option_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.explain_option_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplain_option_elem([NotNull] pggrammar.Explain_option_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.explain_option_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplain_option_name([NotNull] pggrammar.Explain_option_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.explain_option_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplain_option_name([NotNull] pggrammar.Explain_option_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.explain_option_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplain_option_arg([NotNull] pggrammar.Explain_option_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.explain_option_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplain_option_arg([NotNull] pggrammar.Explain_option_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.preparestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreparestmt([NotNull] pggrammar.PreparestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.preparestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreparestmt([NotNull] pggrammar.PreparestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.prep_type_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrep_type_clause([NotNull] pggrammar.Prep_type_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.prep_type_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrep_type_clause([NotNull] pggrammar.Prep_type_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.preparablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreparablestmt([NotNull] pggrammar.PreparablestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.preparablestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreparablestmt([NotNull] pggrammar.PreparablestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.executestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecutestmt([NotNull] pggrammar.ExecutestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.executestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecutestmt([NotNull] pggrammar.ExecutestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.execute_param_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecute_param_clause([NotNull] pggrammar.Execute_param_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.execute_param_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecute_param_clause([NotNull] pggrammar.Execute_param_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.deallocatestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeallocatestmt([NotNull] pggrammar.DeallocatestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.deallocatestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeallocatestmt([NotNull] pggrammar.DeallocatestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.insertstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertstmt([NotNull] pggrammar.InsertstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.insertstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertstmt([NotNull] pggrammar.InsertstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.insert_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsert_target([NotNull] pggrammar.Insert_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.insert_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsert_target([NotNull] pggrammar.Insert_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.insert_rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsert_rest([NotNull] pggrammar.Insert_restContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.insert_rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsert_rest([NotNull] pggrammar.Insert_restContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.override_kind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOverride_kind([NotNull] pggrammar.Override_kindContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.override_kind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOverride_kind([NotNull] pggrammar.Override_kindContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.insert_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsert_column_list([NotNull] pggrammar.Insert_column_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.insert_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsert_column_list([NotNull] pggrammar.Insert_column_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.insert_column_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsert_column_item([NotNull] pggrammar.Insert_column_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.insert_column_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsert_column_item([NotNull] pggrammar.Insert_column_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_on_conflict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_on_conflict([NotNull] pggrammar.Opt_on_conflictContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_on_conflict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_on_conflict([NotNull] pggrammar.Opt_on_conflictContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_conf_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_conf_expr([NotNull] pggrammar.Opt_conf_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_conf_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_conf_expr([NotNull] pggrammar.Opt_conf_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.returning_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturning_clause([NotNull] pggrammar.Returning_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.returning_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturning_clause([NotNull] pggrammar.Returning_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.deletestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeletestmt([NotNull] pggrammar.DeletestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.deletestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeletestmt([NotNull] pggrammar.DeletestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.using_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsing_clause([NotNull] pggrammar.Using_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.using_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsing_clause([NotNull] pggrammar.Using_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.lockstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockstmt([NotNull] pggrammar.LockstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.lockstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockstmt([NotNull] pggrammar.LockstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_lock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_lock([NotNull] pggrammar.Opt_lockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_lock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_lock([NotNull] pggrammar.Opt_lockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.lock_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLock_type([NotNull] pggrammar.Lock_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.lock_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLock_type([NotNull] pggrammar.Lock_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_nowait"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_nowait([NotNull] pggrammar.Opt_nowaitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_nowait"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_nowait([NotNull] pggrammar.Opt_nowaitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_nowait_or_skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_nowait_or_skip([NotNull] pggrammar.Opt_nowait_or_skipContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_nowait_or_skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_nowait_or_skip([NotNull] pggrammar.Opt_nowait_or_skipContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.updatestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpdatestmt([NotNull] pggrammar.UpdatestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.updatestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpdatestmt([NotNull] pggrammar.UpdatestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.set_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_clause_list([NotNull] pggrammar.Set_clause_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.set_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_clause_list([NotNull] pggrammar.Set_clause_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.set_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_clause([NotNull] pggrammar.Set_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.set_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_clause([NotNull] pggrammar.Set_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.set_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_target([NotNull] pggrammar.Set_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.set_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_target([NotNull] pggrammar.Set_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.set_target_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_target_list([NotNull] pggrammar.Set_target_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.set_target_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_target_list([NotNull] pggrammar.Set_target_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.declarecursorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarecursorstmt([NotNull] pggrammar.DeclarecursorstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.declarecursorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarecursorstmt([NotNull] pggrammar.DeclarecursorstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.cursor_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCursor_name([NotNull] pggrammar.Cursor_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.cursor_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCursor_name([NotNull] pggrammar.Cursor_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.cursor_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCursor_options([NotNull] pggrammar.Cursor_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.cursor_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCursor_options([NotNull] pggrammar.Cursor_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_hold"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_hold([NotNull] pggrammar.Opt_holdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_hold"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_hold([NotNull] pggrammar.Opt_holdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.selectstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectstmt([NotNull] pggrammar.SelectstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.selectstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectstmt([NotNull] pggrammar.SelectstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.select_with_parens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_with_parens([NotNull] pggrammar.Select_with_parensContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.select_with_parens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_with_parens([NotNull] pggrammar.Select_with_parensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.select_no_parens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_no_parens([NotNull] pggrammar.Select_no_parensContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.select_no_parens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_no_parens([NotNull] pggrammar.Select_no_parensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_clause([NotNull] pggrammar.Select_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_clause([NotNull] pggrammar.Select_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simple_select_values</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_select_values([NotNull] pggrammar.Simple_select_valuesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simple_select_values</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_select_values([NotNull] pggrammar.Simple_select_valuesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simple_select_select</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_select_select([NotNull] pggrammar.Simple_select_selectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simple_select_select</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_select_select([NotNull] pggrammar.Simple_select_selectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simple_select_table</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_select_table([NotNull] pggrammar.Simple_select_tableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simple_select_table</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_select_table([NotNull] pggrammar.Simple_select_tableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simple_select_union_except_intersect</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_select_union_except_intersect([NotNull] pggrammar.Simple_select_union_except_intersectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simple_select_union_except_intersect</c>
	/// labeled alternative in <see cref="pggrammar.simple_select"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_select_union_except_intersect([NotNull] pggrammar.Simple_select_union_except_intersectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>union</c>
	/// labeled alternative in <see cref="pggrammar.set_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnion([NotNull] pggrammar.UnionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>union</c>
	/// labeled alternative in <see cref="pggrammar.set_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnion([NotNull] pggrammar.UnionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>intersect</c>
	/// labeled alternative in <see cref="pggrammar.set_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntersect([NotNull] pggrammar.IntersectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intersect</c>
	/// labeled alternative in <see cref="pggrammar.set_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntersect([NotNull] pggrammar.IntersectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>except</c>
	/// labeled alternative in <see cref="pggrammar.set_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExcept([NotNull] pggrammar.ExceptContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>except</c>
	/// labeled alternative in <see cref="pggrammar.set_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExcept([NotNull] pggrammar.ExceptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.set_operator_with_all_or_distinct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_operator_with_all_or_distinct([NotNull] pggrammar.Set_operator_with_all_or_distinctContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.set_operator_with_all_or_distinct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_operator_with_all_or_distinct([NotNull] pggrammar.Set_operator_with_all_or_distinctContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.with_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWith_clause([NotNull] pggrammar.With_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.with_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWith_clause([NotNull] pggrammar.With_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.cte_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCte_list([NotNull] pggrammar.Cte_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.cte_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCte_list([NotNull] pggrammar.Cte_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.common_table_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_table_expr([NotNull] pggrammar.Common_table_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.common_table_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_table_expr([NotNull] pggrammar.Common_table_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_materialized"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_materialized([NotNull] pggrammar.Opt_materializedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_materialized"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_materialized([NotNull] pggrammar.Opt_materializedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_with_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_with_clause([NotNull] pggrammar.Opt_with_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_with_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_with_clause([NotNull] pggrammar.Opt_with_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.into_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInto_clause([NotNull] pggrammar.Into_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.into_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInto_clause([NotNull] pggrammar.Into_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_strict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_strict([NotNull] pggrammar.Opt_strictContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_strict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_strict([NotNull] pggrammar.Opt_strictContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opttempTableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpttempTableName([NotNull] pggrammar.OpttempTableNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opttempTableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpttempTableName([NotNull] pggrammar.OpttempTableNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_table([NotNull] pggrammar.Opt_tableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_table([NotNull] pggrammar.Opt_tableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.all_or_distinct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAll_or_distinct([NotNull] pggrammar.All_or_distinctContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.all_or_distinct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAll_or_distinct([NotNull] pggrammar.All_or_distinctContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.distinct_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDistinct_clause([NotNull] pggrammar.Distinct_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.distinct_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDistinct_clause([NotNull] pggrammar.Distinct_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_all_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_all_clause([NotNull] pggrammar.Opt_all_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_all_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_all_clause([NotNull] pggrammar.Opt_all_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_sort_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_sort_clause([NotNull] pggrammar.Opt_sort_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_sort_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_sort_clause([NotNull] pggrammar.Opt_sort_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sort_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSort_clause([NotNull] pggrammar.Sort_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sort_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSort_clause([NotNull] pggrammar.Sort_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sortby_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortby_list([NotNull] pggrammar.Sortby_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sortby_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortby_list([NotNull] pggrammar.Sortby_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sortby"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortby([NotNull] pggrammar.SortbyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sortby"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortby([NotNull] pggrammar.SortbyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.select_limit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_limit([NotNull] pggrammar.Select_limitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.select_limit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_limit([NotNull] pggrammar.Select_limitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_select_limit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_select_limit([NotNull] pggrammar.Opt_select_limitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_select_limit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_select_limit([NotNull] pggrammar.Opt_select_limitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.limit_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLimit_clause([NotNull] pggrammar.Limit_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.limit_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLimit_clause([NotNull] pggrammar.Limit_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.offset_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOffset_clause([NotNull] pggrammar.Offset_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.offset_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOffset_clause([NotNull] pggrammar.Offset_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.select_limit_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_limit_value([NotNull] pggrammar.Select_limit_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.select_limit_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_limit_value([NotNull] pggrammar.Select_limit_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.select_offset_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_offset_value([NotNull] pggrammar.Select_offset_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.select_offset_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_offset_value([NotNull] pggrammar.Select_offset_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.select_fetch_first_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_fetch_first_value([NotNull] pggrammar.Select_fetch_first_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.select_fetch_first_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_fetch_first_value([NotNull] pggrammar.Select_fetch_first_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.i_or_f_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterI_or_f_const([NotNull] pggrammar.I_or_f_constContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.i_or_f_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitI_or_f_const([NotNull] pggrammar.I_or_f_constContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.row_or_rows"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_or_rows([NotNull] pggrammar.Row_or_rowsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.row_or_rows"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_or_rows([NotNull] pggrammar.Row_or_rowsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.first_or_next"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFirst_or_next([NotNull] pggrammar.First_or_nextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.first_or_next"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFirst_or_next([NotNull] pggrammar.First_or_nextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_clause([NotNull] pggrammar.Group_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_clause([NotNull] pggrammar.Group_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.group_by_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_by_list([NotNull] pggrammar.Group_by_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.group_by_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_by_list([NotNull] pggrammar.Group_by_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.group_by_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup_by_item([NotNull] pggrammar.Group_by_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.group_by_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup_by_item([NotNull] pggrammar.Group_by_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.empty_grouping_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmpty_grouping_set([NotNull] pggrammar.Empty_grouping_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.empty_grouping_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmpty_grouping_set([NotNull] pggrammar.Empty_grouping_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rollup_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRollup_clause([NotNull] pggrammar.Rollup_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rollup_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRollup_clause([NotNull] pggrammar.Rollup_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.cube_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCube_clause([NotNull] pggrammar.Cube_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.cube_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCube_clause([NotNull] pggrammar.Cube_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.grouping_sets_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrouping_sets_clause([NotNull] pggrammar.Grouping_sets_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.grouping_sets_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrouping_sets_clause([NotNull] pggrammar.Grouping_sets_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.having_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHaving_clause([NotNull] pggrammar.Having_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.having_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHaving_clause([NotNull] pggrammar.Having_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.for_locking_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_locking_clause([NotNull] pggrammar.For_locking_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.for_locking_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_locking_clause([NotNull] pggrammar.For_locking_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_for_locking_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_for_locking_clause([NotNull] pggrammar.Opt_for_locking_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_for_locking_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_for_locking_clause([NotNull] pggrammar.Opt_for_locking_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.for_locking_items"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_locking_items([NotNull] pggrammar.For_locking_itemsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.for_locking_items"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_locking_items([NotNull] pggrammar.For_locking_itemsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.for_locking_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_locking_item([NotNull] pggrammar.For_locking_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.for_locking_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_locking_item([NotNull] pggrammar.For_locking_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.for_locking_strength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_locking_strength([NotNull] pggrammar.For_locking_strengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.for_locking_strength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_locking_strength([NotNull] pggrammar.For_locking_strengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.locked_rels_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocked_rels_list([NotNull] pggrammar.Locked_rels_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.locked_rels_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocked_rels_list([NotNull] pggrammar.Locked_rels_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.values_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValues_clause([NotNull] pggrammar.Values_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.values_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValues_clause([NotNull] pggrammar.Values_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.from_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrom_clause([NotNull] pggrammar.From_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.from_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrom_clause([NotNull] pggrammar.From_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.from_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrom_list([NotNull] pggrammar.From_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.from_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrom_list([NotNull] pggrammar.From_listContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>table_ref_simple</c>
	/// labeled alternative in <see cref="pggrammar.table_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_ref_simple([NotNull] pggrammar.Table_ref_simpleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>table_ref_simple</c>
	/// labeled alternative in <see cref="pggrammar.table_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_ref_simple([NotNull] pggrammar.Table_ref_simpleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>table_ref_joined_tables</c>
	/// labeled alternative in <see cref="pggrammar.table_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_ref_joined_tables([NotNull] pggrammar.Table_ref_joined_tablesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>table_ref_joined_tables</c>
	/// labeled alternative in <see cref="pggrammar.table_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_ref_joined_tables([NotNull] pggrammar.Table_ref_joined_tablesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.alias_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias_clause([NotNull] pggrammar.Alias_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.alias_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias_clause([NotNull] pggrammar.Alias_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_alias_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_alias_clause([NotNull] pggrammar.Opt_alias_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_alias_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_alias_clause([NotNull] pggrammar.Opt_alias_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_alias_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_alias_clause([NotNull] pggrammar.Func_alias_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_alias_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_alias_clause([NotNull] pggrammar.Func_alias_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.join_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoin_type([NotNull] pggrammar.Join_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.join_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoin_type([NotNull] pggrammar.Join_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.join_outer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoin_outer([NotNull] pggrammar.Join_outerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.join_outer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoin_outer([NotNull] pggrammar.Join_outerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.join_qual"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoin_qual([NotNull] pggrammar.Join_qualContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.join_qual"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoin_qual([NotNull] pggrammar.Join_qualContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.relation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelation_expr([NotNull] pggrammar.Relation_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.relation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelation_expr([NotNull] pggrammar.Relation_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.relation_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelation_expr_list([NotNull] pggrammar.Relation_expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.relation_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelation_expr_list([NotNull] pggrammar.Relation_expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.relation_expr_opt_alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelation_expr_opt_alias([NotNull] pggrammar.Relation_expr_opt_aliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.relation_expr_opt_alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelation_expr_opt_alias([NotNull] pggrammar.Relation_expr_opt_aliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tablesample_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablesample_clause([NotNull] pggrammar.Tablesample_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tablesample_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablesample_clause([NotNull] pggrammar.Tablesample_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_repeatable_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_repeatable_clause([NotNull] pggrammar.Opt_repeatable_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_repeatable_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_repeatable_clause([NotNull] pggrammar.Opt_repeatable_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_table([NotNull] pggrammar.Func_tableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_table([NotNull] pggrammar.Func_tableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsfrom_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsfrom_item([NotNull] pggrammar.Rowsfrom_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsfrom_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsfrom_item([NotNull] pggrammar.Rowsfrom_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rowsfrom_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRowsfrom_list([NotNull] pggrammar.Rowsfrom_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rowsfrom_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRowsfrom_list([NotNull] pggrammar.Rowsfrom_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_col_def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_col_def_list([NotNull] pggrammar.Opt_col_def_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_col_def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_col_def_list([NotNull] pggrammar.Opt_col_def_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_ordinality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_ordinality([NotNull] pggrammar.Opt_ordinalityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_ordinality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_ordinality([NotNull] pggrammar.Opt_ordinalityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_clause([NotNull] pggrammar.Where_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_clause([NotNull] pggrammar.Where_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.where_or_current_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_or_current_clause([NotNull] pggrammar.Where_or_current_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.where_or_current_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_or_current_clause([NotNull] pggrammar.Where_or_current_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opttablefuncelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpttablefuncelementlist([NotNull] pggrammar.OpttablefuncelementlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opttablefuncelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpttablefuncelementlist([NotNull] pggrammar.OpttablefuncelementlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tablefuncelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablefuncelementlist([NotNull] pggrammar.TablefuncelementlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tablefuncelementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablefuncelementlist([NotNull] pggrammar.TablefuncelementlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.tablefuncelement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablefuncelement([NotNull] pggrammar.TablefuncelementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.tablefuncelement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablefuncelement([NotNull] pggrammar.TablefuncelementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xmltable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXmltable([NotNull] pggrammar.XmltableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xmltable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXmltable([NotNull] pggrammar.XmltableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xmltable_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXmltable_column_list([NotNull] pggrammar.Xmltable_column_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xmltable_column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXmltable_column_list([NotNull] pggrammar.Xmltable_column_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xmltable_column_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXmltable_column_el([NotNull] pggrammar.Xmltable_column_elContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xmltable_column_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXmltable_column_el([NotNull] pggrammar.Xmltable_column_elContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xmltable_column_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXmltable_column_option_list([NotNull] pggrammar.Xmltable_column_option_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xmltable_column_option_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXmltable_column_option_list([NotNull] pggrammar.Xmltable_column_option_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xmltable_column_option_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXmltable_column_option_el([NotNull] pggrammar.Xmltable_column_option_elContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xmltable_column_option_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXmltable_column_option_el([NotNull] pggrammar.Xmltable_column_option_elContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_namespace_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_namespace_list([NotNull] pggrammar.Xml_namespace_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_namespace_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_namespace_list([NotNull] pggrammar.Xml_namespace_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_namespace_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_namespace_el([NotNull] pggrammar.Xml_namespace_elContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_namespace_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_namespace_el([NotNull] pggrammar.Xml_namespace_elContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypename([NotNull] pggrammar.TypenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypename([NotNull] pggrammar.TypenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_array_bounds"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_array_bounds([NotNull] pggrammar.Opt_array_boundsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_array_bounds"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_array_bounds([NotNull] pggrammar.Opt_array_boundsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.simpletypename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpletypename([NotNull] pggrammar.SimpletypenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.simpletypename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpletypename([NotNull] pggrammar.SimpletypenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.consttypename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConsttypename([NotNull] pggrammar.ConsttypenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.consttypename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConsttypename([NotNull] pggrammar.ConsttypenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.generictype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenerictype([NotNull] pggrammar.GenerictypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.generictype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenerictype([NotNull] pggrammar.GenerictypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_type_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_type_modifiers([NotNull] pggrammar.Opt_type_modifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_type_modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_type_modifiers([NotNull] pggrammar.Opt_type_modifiersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.numeric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric([NotNull] pggrammar.NumericContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.numeric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric([NotNull] pggrammar.NumericContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_float([NotNull] pggrammar.Opt_floatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_float([NotNull] pggrammar.Opt_floatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.bit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBit([NotNull] pggrammar.BitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.bit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBit([NotNull] pggrammar.BitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constbit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstbit([NotNull] pggrammar.ConstbitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constbit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstbit([NotNull] pggrammar.ConstbitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.bitwithlength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwithlength([NotNull] pggrammar.BitwithlengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.bitwithlength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwithlength([NotNull] pggrammar.BitwithlengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.bitwithoutlength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwithoutlength([NotNull] pggrammar.BitwithoutlengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.bitwithoutlength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwithoutlength([NotNull] pggrammar.BitwithoutlengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter([NotNull] pggrammar.CharacterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter([NotNull] pggrammar.CharacterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constcharacter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstcharacter([NotNull] pggrammar.ConstcharacterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constcharacter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstcharacter([NotNull] pggrammar.ConstcharacterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.characterWithLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacterWithLength([NotNull] pggrammar.CharacterWithLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.characterWithLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacterWithLength([NotNull] pggrammar.CharacterWithLengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.characterWithoutLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacterWithoutLength([NotNull] pggrammar.CharacterWithoutLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.characterWithoutLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacterWithoutLength([NotNull] pggrammar.CharacterWithoutLengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.character_c"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter_c([NotNull] pggrammar.Character_cContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.character_c"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter_c([NotNull] pggrammar.Character_cContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_varying"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_varying([NotNull] pggrammar.Opt_varyingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_varying"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_varying([NotNull] pggrammar.Opt_varyingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constdatetime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstdatetime([NotNull] pggrammar.ConstdatetimeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constdatetime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstdatetime([NotNull] pggrammar.ConstdatetimeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.constinterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstinterval([NotNull] pggrammar.ConstintervalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.constinterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstinterval([NotNull] pggrammar.ConstintervalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_timezone"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_timezone([NotNull] pggrammar.Opt_timezoneContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_timezone"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_timezone([NotNull] pggrammar.Opt_timezoneContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_interval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_interval([NotNull] pggrammar.Opt_intervalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_interval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_interval([NotNull] pggrammar.Opt_intervalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.interval_second"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterval_second([NotNull] pggrammar.Interval_secondContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.interval_second"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterval_second([NotNull] pggrammar.Interval_secondContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.a_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterA_expr([NotNull] pggrammar.A_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.a_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitA_expr([NotNull] pggrammar.A_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.not_la"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot_la([NotNull] pggrammar.Not_laContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.not_la"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot_la([NotNull] pggrammar.Not_laContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.b_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterB_expr([NotNull] pggrammar.B_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.b_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitB_expr([NotNull] pggrammar.B_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>c_expr_expr</c>
	/// labeled alternative in <see cref="pggrammar.c_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterC_expr_expr([NotNull] pggrammar.C_expr_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>c_expr_expr</c>
	/// labeled alternative in <see cref="pggrammar.c_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitC_expr_expr([NotNull] pggrammar.C_expr_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>c_expr_case</c>
	/// labeled alternative in <see cref="pggrammar.c_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterC_expr_case([NotNull] pggrammar.C_expr_caseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>c_expr_case</c>
	/// labeled alternative in <see cref="pggrammar.c_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitC_expr_case([NotNull] pggrammar.C_expr_caseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>c_expr_exists</c>
	/// labeled alternative in <see cref="pggrammar.c_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterC_expr_exists([NotNull] pggrammar.C_expr_existsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>c_expr_exists</c>
	/// labeled alternative in <see cref="pggrammar.c_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitC_expr_exists([NotNull] pggrammar.C_expr_existsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.plsqlvariablename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlsqlvariablename([NotNull] pggrammar.PlsqlvariablenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.plsqlvariablename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlsqlvariablename([NotNull] pggrammar.PlsqlvariablenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_application"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_application([NotNull] pggrammar.Func_applicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_application"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_application([NotNull] pggrammar.Func_applicationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_expr([NotNull] pggrammar.Func_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_expr([NotNull] pggrammar.Func_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_expr_windowless"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_expr_windowless([NotNull] pggrammar.Func_expr_windowlessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_expr_windowless"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_expr_windowless([NotNull] pggrammar.Func_expr_windowlessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_expr_common_subexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_expr_common_subexpr([NotNull] pggrammar.Func_expr_common_subexprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_expr_common_subexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_expr_common_subexpr([NotNull] pggrammar.Func_expr_common_subexprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_root_version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_root_version([NotNull] pggrammar.Xml_root_versionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_root_version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_root_version([NotNull] pggrammar.Xml_root_versionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_xml_root_standalone"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_xml_root_standalone([NotNull] pggrammar.Opt_xml_root_standaloneContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_xml_root_standalone"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_xml_root_standalone([NotNull] pggrammar.Opt_xml_root_standaloneContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_attributes([NotNull] pggrammar.Xml_attributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_attributes([NotNull] pggrammar.Xml_attributesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_attribute_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_attribute_list([NotNull] pggrammar.Xml_attribute_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_attribute_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_attribute_list([NotNull] pggrammar.Xml_attribute_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_attribute_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_attribute_el([NotNull] pggrammar.Xml_attribute_elContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_attribute_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_attribute_el([NotNull] pggrammar.Xml_attribute_elContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.document_or_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDocument_or_content([NotNull] pggrammar.Document_or_contentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.document_or_content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDocument_or_content([NotNull] pggrammar.Document_or_contentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_whitespace_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_whitespace_option([NotNull] pggrammar.Xml_whitespace_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_whitespace_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_whitespace_option([NotNull] pggrammar.Xml_whitespace_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xmlexists_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXmlexists_argument([NotNull] pggrammar.Xmlexists_argumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xmlexists_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXmlexists_argument([NotNull] pggrammar.Xmlexists_argumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xml_passing_mech"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXml_passing_mech([NotNull] pggrammar.Xml_passing_mechContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xml_passing_mech"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXml_passing_mech([NotNull] pggrammar.Xml_passing_mechContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.within_group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithin_group_clause([NotNull] pggrammar.Within_group_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.within_group_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithin_group_clause([NotNull] pggrammar.Within_group_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.filter_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilter_clause([NotNull] pggrammar.Filter_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.filter_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilter_clause([NotNull] pggrammar.Filter_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.window_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindow_clause([NotNull] pggrammar.Window_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.window_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindow_clause([NotNull] pggrammar.Window_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.window_definition_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindow_definition_list([NotNull] pggrammar.Window_definition_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.window_definition_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindow_definition_list([NotNull] pggrammar.Window_definition_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.window_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindow_definition([NotNull] pggrammar.Window_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.window_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindow_definition([NotNull] pggrammar.Window_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.over_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOver_clause([NotNull] pggrammar.Over_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.over_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOver_clause([NotNull] pggrammar.Over_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.window_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindow_specification([NotNull] pggrammar.Window_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.window_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindow_specification([NotNull] pggrammar.Window_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_existing_window_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_existing_window_name([NotNull] pggrammar.Opt_existing_window_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_existing_window_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_existing_window_name([NotNull] pggrammar.Opt_existing_window_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_partition_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_partition_clause([NotNull] pggrammar.Opt_partition_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_partition_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_partition_clause([NotNull] pggrammar.Opt_partition_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_frame_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_frame_clause([NotNull] pggrammar.Opt_frame_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_frame_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_frame_clause([NotNull] pggrammar.Opt_frame_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.frame_extent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrame_extent([NotNull] pggrammar.Frame_extentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.frame_extent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrame_extent([NotNull] pggrammar.Frame_extentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.frame_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrame_bound([NotNull] pggrammar.Frame_boundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.frame_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrame_bound([NotNull] pggrammar.Frame_boundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_window_exclusion_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_window_exclusion_clause([NotNull] pggrammar.Opt_window_exclusion_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_window_exclusion_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_window_exclusion_clause([NotNull] pggrammar.Opt_window_exclusion_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.row"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow([NotNull] pggrammar.RowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.row"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow([NotNull] pggrammar.RowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.explicit_row"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_row([NotNull] pggrammar.Explicit_rowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.explicit_row"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_row([NotNull] pggrammar.Explicit_rowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.implicit_row"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_row([NotNull] pggrammar.Implicit_rowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.implicit_row"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_row([NotNull] pggrammar.Implicit_rowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sub_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSub_type([NotNull] pggrammar.Sub_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sub_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSub_type([NotNull] pggrammar.Sub_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.all_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAll_op([NotNull] pggrammar.All_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.all_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAll_op([NotNull] pggrammar.All_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.mathop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMathop([NotNull] pggrammar.MathopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.mathop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMathop([NotNull] pggrammar.MathopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.qual_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQual_op([NotNull] pggrammar.Qual_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.qual_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQual_op([NotNull] pggrammar.Qual_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.qual_all_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQual_all_op([NotNull] pggrammar.Qual_all_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.qual_all_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQual_all_op([NotNull] pggrammar.Qual_all_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.subquery_Op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubquery_Op([NotNull] pggrammar.Subquery_OpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.subquery_Op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubquery_Op([NotNull] pggrammar.Subquery_OpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_list([NotNull] pggrammar.Expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_list([NotNull] pggrammar.Expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_arg_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_arg_list([NotNull] pggrammar.Func_arg_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_arg_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_arg_list([NotNull] pggrammar.Func_arg_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_arg_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_arg_expr([NotNull] pggrammar.Func_arg_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_arg_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_arg_expr([NotNull] pggrammar.Func_arg_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.type_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_list([NotNull] pggrammar.Type_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.type_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_list([NotNull] pggrammar.Type_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.array_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_expr([NotNull] pggrammar.Array_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.array_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_expr([NotNull] pggrammar.Array_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.array_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_expr_list([NotNull] pggrammar.Array_expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.array_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_expr_list([NotNull] pggrammar.Array_expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.extract_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtract_list([NotNull] pggrammar.Extract_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.extract_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtract_list([NotNull] pggrammar.Extract_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.extract_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtract_arg([NotNull] pggrammar.Extract_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.extract_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtract_arg([NotNull] pggrammar.Extract_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.unicode_normal_form"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnicode_normal_form([NotNull] pggrammar.Unicode_normal_formContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.unicode_normal_form"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnicode_normal_form([NotNull] pggrammar.Unicode_normal_formContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.overlay_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOverlay_list([NotNull] pggrammar.Overlay_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.overlay_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOverlay_list([NotNull] pggrammar.Overlay_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.position_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPosition_list([NotNull] pggrammar.Position_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.position_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPosition_list([NotNull] pggrammar.Position_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.substr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstr_list([NotNull] pggrammar.Substr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.substr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstr_list([NotNull] pggrammar.Substr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.trim_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrim_list([NotNull] pggrammar.Trim_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.trim_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrim_list([NotNull] pggrammar.Trim_listContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>in_expr_select</c>
	/// labeled alternative in <see cref="pggrammar.in_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIn_expr_select([NotNull] pggrammar.In_expr_selectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>in_expr_select</c>
	/// labeled alternative in <see cref="pggrammar.in_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIn_expr_select([NotNull] pggrammar.In_expr_selectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>in_expr_list</c>
	/// labeled alternative in <see cref="pggrammar.in_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIn_expr_list([NotNull] pggrammar.In_expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>in_expr_list</c>
	/// labeled alternative in <see cref="pggrammar.in_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIn_expr_list([NotNull] pggrammar.In_expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.case_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_expr([NotNull] pggrammar.Case_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.case_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_expr([NotNull] pggrammar.Case_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.when_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhen_clause_list([NotNull] pggrammar.When_clause_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.when_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhen_clause_list([NotNull] pggrammar.When_clause_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhen_clause([NotNull] pggrammar.When_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhen_clause([NotNull] pggrammar.When_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.case_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_default([NotNull] pggrammar.Case_defaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.case_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_default([NotNull] pggrammar.Case_defaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.case_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_arg([NotNull] pggrammar.Case_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.case_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_arg([NotNull] pggrammar.Case_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.columnref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnref([NotNull] pggrammar.ColumnrefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.columnref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnref([NotNull] pggrammar.ColumnrefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.indirection_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndirection_el([NotNull] pggrammar.Indirection_elContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.indirection_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndirection_el([NotNull] pggrammar.Indirection_elContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_slice_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_slice_bound([NotNull] pggrammar.Opt_slice_boundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_slice_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_slice_bound([NotNull] pggrammar.Opt_slice_boundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.indirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndirection([NotNull] pggrammar.IndirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.indirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndirection([NotNull] pggrammar.IndirectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_indirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_indirection([NotNull] pggrammar.Opt_indirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_indirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_indirection([NotNull] pggrammar.Opt_indirectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_asymmetric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_asymmetric([NotNull] pggrammar.Opt_asymmetricContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_asymmetric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_asymmetric([NotNull] pggrammar.Opt_asymmetricContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_target_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_target_list([NotNull] pggrammar.Opt_target_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_target_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_target_list([NotNull] pggrammar.Opt_target_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.target_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTarget_list([NotNull] pggrammar.Target_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.target_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTarget_list([NotNull] pggrammar.Target_listContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>target_label</c>
	/// labeled alternative in <see cref="pggrammar.target_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTarget_label([NotNull] pggrammar.Target_labelContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>target_label</c>
	/// labeled alternative in <see cref="pggrammar.target_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTarget_label([NotNull] pggrammar.Target_labelContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>target_star</c>
	/// labeled alternative in <see cref="pggrammar.target_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTarget_star([NotNull] pggrammar.Target_starContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>target_star</c>
	/// labeled alternative in <see cref="pggrammar.target_el"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTarget_star([NotNull] pggrammar.Target_starContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.qualified_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_name_list([NotNull] pggrammar.Qualified_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.qualified_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_name_list([NotNull] pggrammar.Qualified_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_name([NotNull] pggrammar.Qualified_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_name([NotNull] pggrammar.Qualified_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName_list([NotNull] pggrammar.Name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName_list([NotNull] pggrammar.Name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] pggrammar.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] pggrammar.NameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.attr_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttr_name([NotNull] pggrammar.Attr_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.attr_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttr_name([NotNull] pggrammar.Attr_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.file_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_name([NotNull] pggrammar.File_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.file_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_name([NotNull] pggrammar.File_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.func_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_name([NotNull] pggrammar.Func_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.func_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_name([NotNull] pggrammar.Func_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.aexprconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAexprconst([NotNull] pggrammar.AexprconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.aexprconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAexprconst([NotNull] pggrammar.AexprconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.xconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXconst([NotNull] pggrammar.XconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.xconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXconst([NotNull] pggrammar.XconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.bconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBconst([NotNull] pggrammar.BconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.bconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBconst([NotNull] pggrammar.BconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.fconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFconst([NotNull] pggrammar.FconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.fconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFconst([NotNull] pggrammar.FconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.iconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIconst([NotNull] pggrammar.IconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.iconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIconst([NotNull] pggrammar.IconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSconst([NotNull] pggrammar.SconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSconst([NotNull] pggrammar.SconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.anysconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnysconst([NotNull] pggrammar.AnysconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.anysconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnysconst([NotNull] pggrammar.AnysconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_uescape"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_uescape([NotNull] pggrammar.Opt_uescapeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_uescape"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_uescape([NotNull] pggrammar.Opt_uescapeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.signediconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignediconst([NotNull] pggrammar.SignediconstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.signediconst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignediconst([NotNull] pggrammar.SignediconstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.roleid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleid([NotNull] pggrammar.RoleidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.roleid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleid([NotNull] pggrammar.RoleidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.rolespec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRolespec([NotNull] pggrammar.RolespecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.rolespec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRolespec([NotNull] pggrammar.RolespecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.role_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRole_list([NotNull] pggrammar.Role_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.role_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRole_list([NotNull] pggrammar.Role_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.colid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColid([NotNull] pggrammar.ColidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.colid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColid([NotNull] pggrammar.ColidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.type_function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_function_name([NotNull] pggrammar.Type_function_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.type_function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_function_name([NotNull] pggrammar.Type_function_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.nonreservedword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonreservedword([NotNull] pggrammar.NonreservedwordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.nonreservedword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonreservedword([NotNull] pggrammar.NonreservedwordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.collabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCollabel([NotNull] pggrammar.CollabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.collabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCollabel([NotNull] pggrammar.CollabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] pggrammar.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] pggrammar.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.plsqlidentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlsqlidentifier([NotNull] pggrammar.PlsqlidentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.plsqlidentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlsqlidentifier([NotNull] pggrammar.PlsqlidentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.unreserved_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnreserved_keyword([NotNull] pggrammar.Unreserved_keywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.unreserved_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnreserved_keyword([NotNull] pggrammar.Unreserved_keywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.col_name_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCol_name_keyword([NotNull] pggrammar.Col_name_keywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.col_name_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCol_name_keyword([NotNull] pggrammar.Col_name_keywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.type_func_name_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_func_name_keyword([NotNull] pggrammar.Type_func_name_keywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.type_func_name_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_func_name_keyword([NotNull] pggrammar.Type_func_name_keywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.reserved_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReserved_keyword([NotNull] pggrammar.Reserved_keywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.reserved_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReserved_keyword([NotNull] pggrammar.Reserved_keywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.pl_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPl_function([NotNull] pggrammar.Pl_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.pl_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPl_function([NotNull] pggrammar.Pl_functionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.comp_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp_options([NotNull] pggrammar.Comp_optionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.comp_options"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp_options([NotNull] pggrammar.Comp_optionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.comp_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp_option([NotNull] pggrammar.Comp_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.comp_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp_option([NotNull] pggrammar.Comp_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sharp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSharp([NotNull] pggrammar.SharpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sharp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSharp([NotNull] pggrammar.SharpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.option_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOption_value([NotNull] pggrammar.Option_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.option_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOption_value([NotNull] pggrammar.Option_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_semi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_semi([NotNull] pggrammar.Opt_semiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_semi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_semi([NotNull] pggrammar.Opt_semiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.pl_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPl_block([NotNull] pggrammar.Pl_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.pl_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPl_block([NotNull] pggrammar.Pl_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_sect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_sect([NotNull] pggrammar.Decl_sectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_sect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_sect([NotNull] pggrammar.Decl_sectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_start([NotNull] pggrammar.Decl_startContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_start([NotNull] pggrammar.Decl_startContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_stmts([NotNull] pggrammar.Decl_stmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_stmts([NotNull] pggrammar.Decl_stmtsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.label_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel_decl([NotNull] pggrammar.Label_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.label_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel_decl([NotNull] pggrammar.Label_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_stmt([NotNull] pggrammar.Decl_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_stmt([NotNull] pggrammar.Decl_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_statement([NotNull] pggrammar.Decl_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_statement([NotNull] pggrammar.Decl_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_scrollable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_scrollable([NotNull] pggrammar.Opt_scrollableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_scrollable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_scrollable([NotNull] pggrammar.Opt_scrollableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_cursor_query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_cursor_query([NotNull] pggrammar.Decl_cursor_queryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_cursor_query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_cursor_query([NotNull] pggrammar.Decl_cursor_queryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_cursor_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_cursor_args([NotNull] pggrammar.Decl_cursor_argsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_cursor_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_cursor_args([NotNull] pggrammar.Decl_cursor_argsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_cursor_arglist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_cursor_arglist([NotNull] pggrammar.Decl_cursor_arglistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_cursor_arglist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_cursor_arglist([NotNull] pggrammar.Decl_cursor_arglistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_cursor_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_cursor_arg([NotNull] pggrammar.Decl_cursor_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_cursor_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_cursor_arg([NotNull] pggrammar.Decl_cursor_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_is_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_is_for([NotNull] pggrammar.Decl_is_forContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_is_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_is_for([NotNull] pggrammar.Decl_is_forContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_aliasitem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_aliasitem([NotNull] pggrammar.Decl_aliasitemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_aliasitem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_aliasitem([NotNull] pggrammar.Decl_aliasitemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_varname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_varname([NotNull] pggrammar.Decl_varnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_varname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_varname([NotNull] pggrammar.Decl_varnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_const([NotNull] pggrammar.Decl_constContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_const([NotNull] pggrammar.Decl_constContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_datatype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_datatype([NotNull] pggrammar.Decl_datatypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_datatype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_datatype([NotNull] pggrammar.Decl_datatypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_collate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_collate([NotNull] pggrammar.Decl_collateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_collate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_collate([NotNull] pggrammar.Decl_collateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_notnull"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_notnull([NotNull] pggrammar.Decl_notnullContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_notnull"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_notnull([NotNull] pggrammar.Decl_notnullContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_defval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_defval([NotNull] pggrammar.Decl_defvalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_defval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_defval([NotNull] pggrammar.Decl_defvalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.decl_defkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl_defkey([NotNull] pggrammar.Decl_defkeyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.decl_defkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl_defkey([NotNull] pggrammar.Decl_defkeyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.assign_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign_operator([NotNull] pggrammar.Assign_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.assign_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign_operator([NotNull] pggrammar.Assign_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.proc_sect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_sect([NotNull] pggrammar.Proc_sectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.proc_sect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_sect([NotNull] pggrammar.Proc_sectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.proc_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_stmt([NotNull] pggrammar.Proc_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.proc_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_stmt([NotNull] pggrammar.Proc_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_perform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_perform([NotNull] pggrammar.Stmt_performContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_perform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_perform([NotNull] pggrammar.Stmt_performContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_call([NotNull] pggrammar.Stmt_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_call([NotNull] pggrammar.Stmt_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_expr_list([NotNull] pggrammar.Opt_expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_expr_list([NotNull] pggrammar.Opt_expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_assign([NotNull] pggrammar.Stmt_assignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_assign([NotNull] pggrammar.Stmt_assignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_getdiag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_getdiag([NotNull] pggrammar.Stmt_getdiagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_getdiag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_getdiag([NotNull] pggrammar.Stmt_getdiagContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.getdiag_area_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetdiag_area_opt([NotNull] pggrammar.Getdiag_area_optContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.getdiag_area_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetdiag_area_opt([NotNull] pggrammar.Getdiag_area_optContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.getdiag_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetdiag_list([NotNull] pggrammar.Getdiag_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.getdiag_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetdiag_list([NotNull] pggrammar.Getdiag_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.getdiag_list_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetdiag_list_item([NotNull] pggrammar.Getdiag_list_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.getdiag_list_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetdiag_list_item([NotNull] pggrammar.Getdiag_list_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.getdiag_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetdiag_item([NotNull] pggrammar.Getdiag_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.getdiag_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetdiag_item([NotNull] pggrammar.Getdiag_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.getdiag_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetdiag_target([NotNull] pggrammar.Getdiag_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.getdiag_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetdiag_target([NotNull] pggrammar.Getdiag_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.assign_var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign_var([NotNull] pggrammar.Assign_varContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.assign_var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign_var([NotNull] pggrammar.Assign_varContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_if([NotNull] pggrammar.Stmt_ifContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_if([NotNull] pggrammar.Stmt_ifContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_elsifs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_elsifs([NotNull] pggrammar.Stmt_elsifsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_elsifs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_elsifs([NotNull] pggrammar.Stmt_elsifsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_else([NotNull] pggrammar.Stmt_elseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_else([NotNull] pggrammar.Stmt_elseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_case([NotNull] pggrammar.Stmt_caseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_case([NotNull] pggrammar.Stmt_caseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_expr_until_when"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_expr_until_when([NotNull] pggrammar.Opt_expr_until_whenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_expr_until_when"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_expr_until_when([NotNull] pggrammar.Opt_expr_until_whenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.case_when_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_when_list([NotNull] pggrammar.Case_when_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.case_when_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_when_list([NotNull] pggrammar.Case_when_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.case_when"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_when([NotNull] pggrammar.Case_whenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.case_when"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_when([NotNull] pggrammar.Case_whenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_case_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_case_else([NotNull] pggrammar.Opt_case_elseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_case_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_case_else([NotNull] pggrammar.Opt_case_elseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_loop([NotNull] pggrammar.Stmt_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_loop([NotNull] pggrammar.Stmt_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_while([NotNull] pggrammar.Stmt_whileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_while([NotNull] pggrammar.Stmt_whileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_for([NotNull] pggrammar.Stmt_forContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_for([NotNull] pggrammar.Stmt_forContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.for_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_control([NotNull] pggrammar.For_controlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.for_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_control([NotNull] pggrammar.For_controlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_for_using_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_for_using_expression([NotNull] pggrammar.Opt_for_using_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_for_using_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_for_using_expression([NotNull] pggrammar.Opt_for_using_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_cursor_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_cursor_parameters([NotNull] pggrammar.Opt_cursor_parametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_cursor_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_cursor_parameters([NotNull] pggrammar.Opt_cursor_parametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_reverse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_reverse([NotNull] pggrammar.Opt_reverseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_reverse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_reverse([NotNull] pggrammar.Opt_reverseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_by_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_by_expression([NotNull] pggrammar.Opt_by_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_by_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_by_expression([NotNull] pggrammar.Opt_by_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.for_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_variable([NotNull] pggrammar.For_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.for_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_variable([NotNull] pggrammar.For_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_foreach_a"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_foreach_a([NotNull] pggrammar.Stmt_foreach_aContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_foreach_a"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_foreach_a([NotNull] pggrammar.Stmt_foreach_aContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.foreach_slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeach_slice([NotNull] pggrammar.Foreach_sliceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.foreach_slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeach_slice([NotNull] pggrammar.Foreach_sliceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_exit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_exit([NotNull] pggrammar.Stmt_exitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_exit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_exit([NotNull] pggrammar.Stmt_exitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.exit_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExit_type([NotNull] pggrammar.Exit_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.exit_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExit_type([NotNull] pggrammar.Exit_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_return([NotNull] pggrammar.Stmt_returnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_return([NotNull] pggrammar.Stmt_returnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_return_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_return_result([NotNull] pggrammar.Opt_return_resultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_return_result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_return_result([NotNull] pggrammar.Opt_return_resultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_raise"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_raise([NotNull] pggrammar.Stmt_raiseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_raise"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_raise([NotNull] pggrammar.Stmt_raiseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_stmt_raise_level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_stmt_raise_level([NotNull] pggrammar.Opt_stmt_raise_levelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_stmt_raise_level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_stmt_raise_level([NotNull] pggrammar.Opt_stmt_raise_levelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_raise_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_raise_list([NotNull] pggrammar.Opt_raise_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_raise_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_raise_list([NotNull] pggrammar.Opt_raise_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_raise_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_raise_using([NotNull] pggrammar.Opt_raise_usingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_raise_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_raise_using([NotNull] pggrammar.Opt_raise_usingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_raise_using_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_raise_using_elem([NotNull] pggrammar.Opt_raise_using_elemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_raise_using_elem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_raise_using_elem([NotNull] pggrammar.Opt_raise_using_elemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_raise_using_elem_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_raise_using_elem_list([NotNull] pggrammar.Opt_raise_using_elem_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_raise_using_elem_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_raise_using_elem_list([NotNull] pggrammar.Opt_raise_using_elem_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_assert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_assert([NotNull] pggrammar.Stmt_assertContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_assert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_assert([NotNull] pggrammar.Stmt_assertContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_stmt_assert_message"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_stmt_assert_message([NotNull] pggrammar.Opt_stmt_assert_messageContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_stmt_assert_message"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_stmt_assert_message([NotNull] pggrammar.Opt_stmt_assert_messageContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.loop_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop_body([NotNull] pggrammar.Loop_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.loop_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop_body([NotNull] pggrammar.Loop_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_execsql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_execsql([NotNull] pggrammar.Stmt_execsqlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_execsql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_execsql([NotNull] pggrammar.Stmt_execsqlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_dynexecute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_dynexecute([NotNull] pggrammar.Stmt_dynexecuteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_dynexecute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_dynexecute([NotNull] pggrammar.Stmt_dynexecuteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_execute_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_execute_using([NotNull] pggrammar.Opt_execute_usingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_execute_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_execute_using([NotNull] pggrammar.Opt_execute_usingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_execute_using_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_execute_using_list([NotNull] pggrammar.Opt_execute_using_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_execute_using_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_execute_using_list([NotNull] pggrammar.Opt_execute_using_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_execute_into"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_execute_into([NotNull] pggrammar.Opt_execute_intoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_execute_into"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_execute_into([NotNull] pggrammar.Opt_execute_intoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_open"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_open([NotNull] pggrammar.Stmt_openContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_open"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_open([NotNull] pggrammar.Stmt_openContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_open_bound_list_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_open_bound_list_item([NotNull] pggrammar.Opt_open_bound_list_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_open_bound_list_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_open_bound_list_item([NotNull] pggrammar.Opt_open_bound_list_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_open_bound_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_open_bound_list([NotNull] pggrammar.Opt_open_bound_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_open_bound_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_open_bound_list([NotNull] pggrammar.Opt_open_bound_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_open_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_open_using([NotNull] pggrammar.Opt_open_usingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_open_using"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_open_using([NotNull] pggrammar.Opt_open_usingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sql_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSql_expression_list([NotNull] pggrammar.Sql_expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sql_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSql_expression_list([NotNull] pggrammar.Sql_expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_scroll_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_scroll_option([NotNull] pggrammar.Opt_scroll_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_scroll_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_scroll_option([NotNull] pggrammar.Opt_scroll_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_scroll_option_no"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_scroll_option_no([NotNull] pggrammar.Opt_scroll_option_noContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_scroll_option_no"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_scroll_option_no([NotNull] pggrammar.Opt_scroll_option_noContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_fetch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_fetch([NotNull] pggrammar.Stmt_fetchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_fetch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_fetch([NotNull] pggrammar.Stmt_fetchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.into_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInto_target([NotNull] pggrammar.Into_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.into_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInto_target([NotNull] pggrammar.Into_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_cursor_from"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_cursor_from([NotNull] pggrammar.Opt_cursor_fromContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_cursor_from"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_cursor_from([NotNull] pggrammar.Opt_cursor_fromContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_fetch_direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_fetch_direction([NotNull] pggrammar.Opt_fetch_directionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_fetch_direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_fetch_direction([NotNull] pggrammar.Opt_fetch_directionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_move([NotNull] pggrammar.Stmt_moveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_move([NotNull] pggrammar.Stmt_moveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_close"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_close([NotNull] pggrammar.Stmt_closeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_close"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_close([NotNull] pggrammar.Stmt_closeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_null"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_null([NotNull] pggrammar.Stmt_nullContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_null"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_null([NotNull] pggrammar.Stmt_nullContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_commit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_commit([NotNull] pggrammar.Stmt_commitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_commit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_commit([NotNull] pggrammar.Stmt_commitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_rollback"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_rollback([NotNull] pggrammar.Stmt_rollbackContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_rollback"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_rollback([NotNull] pggrammar.Stmt_rollbackContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.plsql_opt_transaction_chain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlsql_opt_transaction_chain([NotNull] pggrammar.Plsql_opt_transaction_chainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.plsql_opt_transaction_chain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlsql_opt_transaction_chain([NotNull] pggrammar.Plsql_opt_transaction_chainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.stmt_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_set([NotNull] pggrammar.Stmt_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.stmt_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_set([NotNull] pggrammar.Stmt_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.cursor_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCursor_variable([NotNull] pggrammar.Cursor_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.cursor_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCursor_variable([NotNull] pggrammar.Cursor_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.exception_sect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterException_sect([NotNull] pggrammar.Exception_sectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.exception_sect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitException_sect([NotNull] pggrammar.Exception_sectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.proc_exceptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_exceptions([NotNull] pggrammar.Proc_exceptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.proc_exceptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_exceptions([NotNull] pggrammar.Proc_exceptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.proc_exception"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_exception([NotNull] pggrammar.Proc_exceptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.proc_exception"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_exception([NotNull] pggrammar.Proc_exceptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.proc_conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_conditions([NotNull] pggrammar.Proc_conditionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.proc_conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_conditions([NotNull] pggrammar.Proc_conditionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.proc_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_condition([NotNull] pggrammar.Proc_conditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.proc_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_condition([NotNull] pggrammar.Proc_conditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_block_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_block_label([NotNull] pggrammar.Opt_block_labelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_block_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_block_label([NotNull] pggrammar.Opt_block_labelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_loop_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_loop_label([NotNull] pggrammar.Opt_loop_labelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_loop_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_loop_label([NotNull] pggrammar.Opt_loop_labelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_label([NotNull] pggrammar.Opt_labelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_label([NotNull] pggrammar.Opt_labelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_exitcond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_exitcond([NotNull] pggrammar.Opt_exitcondContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_exitcond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_exitcond([NotNull] pggrammar.Opt_exitcondContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.any_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAny_identifier([NotNull] pggrammar.Any_identifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.any_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAny_identifier([NotNull] pggrammar.Any_identifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.plsql_unreserved_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlsql_unreserved_keyword([NotNull] pggrammar.Plsql_unreserved_keywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.plsql_unreserved_keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlsql_unreserved_keyword([NotNull] pggrammar.Plsql_unreserved_keywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.sql_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSql_expression([NotNull] pggrammar.Sql_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.sql_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSql_expression([NotNull] pggrammar.Sql_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.expr_until_then"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_until_then([NotNull] pggrammar.Expr_until_thenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.expr_until_then"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_until_then([NotNull] pggrammar.Expr_until_thenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.expr_until_semi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_until_semi([NotNull] pggrammar.Expr_until_semiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.expr_until_semi"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_until_semi([NotNull] pggrammar.Expr_until_semiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.expr_until_rightbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_until_rightbracket([NotNull] pggrammar.Expr_until_rightbracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.expr_until_rightbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_until_rightbracket([NotNull] pggrammar.Expr_until_rightbracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.expr_until_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_until_loop([NotNull] pggrammar.Expr_until_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.expr_until_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_until_loop([NotNull] pggrammar.Expr_until_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.make_execsql_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMake_execsql_stmt([NotNull] pggrammar.Make_execsql_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.make_execsql_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMake_execsql_stmt([NotNull] pggrammar.Make_execsql_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="pggrammar.opt_returning_clause_into"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpt_returning_clause_into([NotNull] pggrammar.Opt_returning_clause_intoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="pggrammar.opt_returning_clause_into"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpt_returning_clause_into([NotNull] pggrammar.Opt_returning_clause_intoContext context);
}
